{
  "id": "python/smithers-bluespace",
  "name": "BlueSpace",
  "authors": ["Christopher Smith"],
  "license": "X11",
  "languages": ["Python"],
  "tags": ["interpreter", "compiler", "assembler", "optimizer", "mapping", "programs"],
  "date": "2014-07-10 19:59:10 +0100",
  "spec_version": "0.3",
  "source": [
    "https://github.com/Smithers888/BlueSpace",
    "https://cpjsmith.uk/whitespace",
    "https://github.com/wspace/smithers-bluespace-python"
  ],
  "assembly": {
    "mnemonics": {
      "push": ["Push"],
      "dup": ["Duplicate"],
      "copy": ["Copy"],
      "swap": ["Swap"],
      "drop": ["Discard"],
      "slide": ["Slide"],
      "add": ["Add"],
      "sub": ["Subtract"],
      "mul": ["Multiply"],
      "div": ["Divide"],
      "mod": ["Modulo"],
      "store": ["Store"],
      "retrieve": ["Retrieve"],
      "label": ["Label"],
      "call": ["Call"],
      "jmp": ["Jump"],
      "jz": ["JumpZero"],
      "jn": ["JumpNegative"],
      "ret": ["Return"],
      "end": ["End"],
      "printc": ["OutputChar"],
      "printi": ["OutputNum"],
      "readc": ["ReadChar"],
      "readi": ["ReadNum"]
    },
    "case_sensitive_instructions": false,
    "line_comments": ["#"],
    "usage": ["assembler"],
    "extension": "wsa"
  },
  "mappings": [{ "space": "s", "tab": "t", "lf": "n", "extension": "wsp" }],
  "commands": [
    {
      "type": "interpreter",
      "bin": "bspace.py",
      "dependencies": ["Python 3"],
      "usage": "python3 $0 <file>",
      "options": [
        { "short": "h", "long": "help", "desc": "show this help message and exit" },
        { "short": "v", "long": "version", "desc": "print version information and exit" },
        {
          "short": "i",
          "long": "input",
          "arg": "SYNTAX",
          "type": "enum",
          "desc": "choose the input syntax",
          "values": [
            { "values": ["whitespace"], "desc": "Whitespace syntax (default)" },
            { "values": ["printable"], "desc": "printable syntax" },
            { "values": ["assembly"], "desc": "Whitespace assembly syntax" }
          ]
        },
        {
          "short": "c",
          "long": "convertto",
          "arg": "TARGET",
          "type": "enum",
          "desc": "choose the target format",
          "values": [
            { "values": ["whitespace"], "desc": "convert to Whitespace syntax" },
            { "values": ["printable"], "desc": "convert to printable syntax" },
            { "values": ["assembly"], "desc": "convert to Whitespace assembly syntax" },
            { "values": ["python"], "desc": "compile to Python 3 source" },
            { "values": ["optimised"], "desc": "compile to Python 3 source with optimizations" }
          ]
        },
        {
          "short": "r",
          "long": "run",
          "arg": "MODE",
          "type": "enum",
          "desc": "interpret program",
          "values": [
            { "values": ["interpret"], "desc": "interpret Whitespace code directly (default)" },
            { "values": ["python"], "desc": "compile to Python 3 source and evaluate" },
            { "values": ["optimised"], "desc": "compile to Python 3 source with optimizations and evaluate" }
          ]
        }
      ],
      "option_parse": "Python argparse",
      "notes": "Reads program from stdin if <file> is -"
    }
  ],
  "notes": "Mapping has spaces between opcode and param and each instruction is on a separate line. Assembly string parameters are written with s/t/l. Date is from quine-cs.ws Last-Modified, in BST to match commits."
}
