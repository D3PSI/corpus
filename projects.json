[
  {
    "name": "Interpreter",
    "path": "python/ganeshsankaran",
    "authors": ["Ganesh Sankaran"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["wsa interpreter", "programs"],
    "date": "2021-05-29 10:30:15 -0700",
    "spec_version": "0.2",
    "source": ["https://github.com/ganeshsankaran/interpreter"],
    "assembly": {
      "instructions": {
        "push": ["push <number>"],
        "dup": ["dup"],
        "swap": ["swap"],
        "drop": ["pop"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["load"],
        "label": ["label <label>"],
        "call": ["call <label>"],
        "jmp": ["jump <label>"],
        "jz": ["jnil <label>"],
        "jn": ["jneg <label>"],
        "ret": ["ret"],
        "end": ["halt"],
        "printc": ["putchar"],
        "printi": ["putint"],
        "readc": ["getchar"],
        "readi": ["getint"]
      },
      "extension": "txt"
    },
    "commands": [
      {
        "type": "wsa interpreter",
        "bin": "interpreter.py",
        "usage": "python3 $0 <file>",
        "notes": "Directly executes wsa files, starting at the `main` label. Files must not have any blank or trailing lines"
      }
    ]
  },
  {
    "name": "wslib",
    "path": "whitespace/andrewarchi-wslib",
    "authors": ["Andrew Archibald"],
    "license": "MPL-2.0",
    "languages": ["Whitespace"],
    "tags": ["standard library", "programs", "assembler"],
    "date": "2021-05-24 15:38:17 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/andrewarchi/wslib"],
    "assembly": {
      "instructions": {
        "push": ["push <number_char>"],
        "dup": ["dup"],
        "copy": ["copy <number>"],
        "swap": ["swap"],
        "drop": ["drop", "drop <number>"],
        "slide": ["slide <number>"],
        "add": ["add", "add <arg>", "add <arg> <arg>", "add <arg> _"],
        "sub": ["sub", "sub <arg>", "sub <arg> <arg>", "sub <arg> _"],
        "mul": ["mul", "mul <arg>", "mul <arg> <arg>", "mul <arg> _"],
        "div": ["div", "div <arg>", "div <arg> <arg>", "div <arg> _"],
        "mod": ["mod", "mod <arg>", "mod <arg> <arg>", "mod <arg> _"],
        "store": ["store", "store <arg>", "store <arg> <arg>", "store <arg> _"],
        "retrieve": ["retrieve", "retrieve <arg>"],
        "label": ["<label>:"],
        "call": ["call <args> <label>"],
        "jmp": ["jmp <args> <label>"],
        "jz": ["jz <args> <label>", "jeof <args> <label>"],
        "jn": ["jn <args> <label>"],
        "ret": ["ret", "ret <arg>"],
        "end": ["end"],
        "printc": ["printc", "printc <arg>"],
        "printi": ["printi", "printi <arg>"],
        "readc": ["readc", "readc <arg>"],
        "readi": ["readi", "readi <arg>"]
      },
      "patterns": {
        "arg": "<number_char>|\\*?\\^?<number>",
        "args": "<arg>*|_?|<arg>*",
        "number": "[+-]?[0-9]+",
        "number_char": "<number>|'\\x[0-9A-Fa-f]{2}'|-?0x[0-9A-Fa-f]{2}|'\\[abtnvfre\\]'|'[ -!(-\\[\\]-~]'"
      },
      "extension": "wsa"
    },
    "commands": [{ "type": "assembler", "bin": "assemble.sh", "usage": "$0 <file> [<file>...]" }]
  },
  {
    "name": "wsjq",
    "path": "jq/andrewarchi-wsjq",
    "authors": ["Andrew Archibald"],
    "license": "MPL-2.0",
    "languages": ["jq"],
    "tags": ["interpreter", "debugger", "disassembler"],
    "date": "2021-05-02 07:26:45 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/andrewarchi/wsjq"],
    "bounds": { "precision": "float64" },
    "assembly": {
      "instructions": {
        "push": ["push <number>"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["drop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["<label>:", "%<number>:"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["end"],
        "printc": ["printc"],
        "printi": ["printi"],
        "readc": ["readc"],
        "readi": ["readi"]
      },
      "indentation": "    ",
      "usage": ["disassembler", "debugger"],
      "extension": "wsa"
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "wsjq",
        "dependencies": ["jq"],
        "usage": "$0 [<mode>] <file>",
        "options": [{ "short": "h", "long": "help", "desc": "Show usage" }],
        "option_parse": "manual",
        "subcommands": [
          { "name": "run", "desc": "Run the program (default)" },
          { "name": "debug", "desc": "Run the program in the debugger" },
          { "name": "disasm", "desc": "Disassemble the program" },
          { "name": "help", "desc": "Show usage" }
        ]
      }
    ]
  },
  {
    "name": "ws",
    "path": "python/ffanzhang",
    "authors": ["ffanzhang"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2021-03-06 22:34:15 -0800",
    "spec_version": "0.2",
    "source": ["https://github.com/ffanzhang/ws"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUPL"],
        "swap": ["SWAP"],
        "drop": ["DISC"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["PUT"],
        "retrieve": ["GET"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JZER"],
        "jn": ["JNEG"],
        "ret": ["ENDS"],
        "end": ["ENDP"],
        "printc": ["OTC"],
        "printi": ["OTN"],
        "readc": ["RDC"],
        "readi": ["RDN"]
      },
      "usage": ["enums"]
    },
    "commands": [{ "bin": "ws.py", "usage": "python3 $0 < <file>" }],
    "notes": "Only implements push, print, printi, and end"
  },
  {
    "name": "Albus",
    "path": "rust/collidedscope-albus",
    "authors": ["Collided Scope"],
    "license": "none",
    "languages": ["Rust"],
    "tags": ["interpreter"],
    "date": "2021-02-12 08:39:06 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/collidedscope/albus"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "target/release/albus",
        "build": "cargo build --release",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "%whitespace.reb",
    "path": "ren-c/hostilefork",
    "authors": ["Brian Dickens (Hostile Fork)"],
    "license": "MIT",
    "languages": ["Ren-C"],
    "tags": ["interpreter"],
    "date": "2021-01-31 08:01:42 -0500",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/hostilefork-ren-c",
      "https://github.com/hostilefork/whitespacers/tree/master/ren-c"
    ],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace.reb",
        "dependencies": ["Ren-C"],
        "usage": "r3 $0",
        "notes": "Program is hardcoded to one that counts from 1 to 10. Prints instructions while executing."
      }
    ]
  },
  {
    "name": "Whitespace exotic programming language interpreter",
    "path": "typescript/fy0u11",
    "authors": ["Sergey Strigin"],
    "license": "ISC",
    "languages": ["TypeScript"],
    "tags": ["interpreter"],
    "date": "2021-01-12 22:32:44 +0600",
    "spec_version": "0.3",
    "source": ["https://github.com/FY0u11/whitespace-interpreter"],
    "commands": [{ "type": "interpreter", "bin": "dist/Whitespace.js", "build": "npm install && npm run build" }],
    "notes": "Codewars solution"
  },
  {
    "name": "asm2ws",
    "path": "c/kspalaiologos-asm2ws",
    "authors": ["Kamila Szewczyk (Palaiologos)"],
    "license": "GPL-3.0-or-later",
    "languages": ["C", "Yacc", "Lex"],
    "tags": ["interpreter", "JIT", "assembler", "disassembler", "optimizer", "programs"],
    "date": "2020-12-31 22:37:25 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/kspalaiologos/asm2ws"],
    "assembly": {
      "instructions": {
        "push": ["PSH", "PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY", "TAKE", "PULL"],
        "swap": ["XCHG", "SWP", "SWAP"],
        "drop": ["DROP", "DSC"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STO"],
        "retrieve": ["RCL"],
        "label": ["@<label>"],
        "call": ["CALL %<label>", "GOSUB %<label>", "JSR %<label>"],
        "jmp": ["JMP %<label>", "J %<label>", "B %<label>"],
        "jz": ["JZ %<label>", "BZ %<label>"],
        "jn": ["JLTZ %<label>", "BLTZ %<label>"],
        "ret": ["RET"],
        "end": ["END"],
        "printc": ["PUTC"],
        "printi": ["PUTN"],
        "readc": ["GETC"],
        "readi": ["GETN"]
      },
      "patterns": { "label": "@([A-Za-z_][A-Za-z0-9_]*|L<number>)" },
      "case_sensitive_instructions": false,
      "line_comment_prefix": ";",
      "extension": "asm"
    },
    "commands": [
      {
        "bin": "wsi",
        "dependencies": ["Flex", "Bison"],
        "build": "./configure --with-target=release && make -j4 wsi",
        "usage": "$0 [-h | --help] [-d | --disassemble] [-c | --cycles] [-a | --aot] [-j | --jit] [-m | --masm] [-Os] [-Of] <file>",
        "options": [
          { "short": "h", "long": "help", "desc": "display this screen." },
          { "short": "d", "long": "disassemble", "desc": "disassemble the whitespace program." },
          { "short": "c", "long": "cycles", "desc": "count operations made by the program." },
          { "short": "a", "long": "aot", "desc": "build a C source file." },
          { "short": "j", "long": "jit", "desc": "enable the JIT compiler." },
          { "short": "m", "long": "masm", "desc": "run the macro assembler." },
          { "short": "Os", "desc": "optimize for size." },
          { "short": "Of", "desc": "optimize to produce fast code." }
        ],
        "option_parse": "manual",
        "notes": "default operation: run whitespace code."
      }
    ],
    "notes": "Has various number formats and REP instruction"
  },
  {
    "name": "Spitewaste",
    "path": "ruby/collidedscope-spitewaste",
    "authors": ["Collided Scope"],
    "license": "WTFPL",
    "languages": ["Ruby"],
    "tags": ["language compiler", "assembler", "disassembler", "programs", "stdlib"],
    "date": "2020-12-11 23:54:53 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/collidedscope/spitewaste"],
    "whitespace": { "nonstandard": [{ "name": "shell", "seq": "TLL" }, { "name": "eval", "seq": "LLT" }] },
    "commands": [
      {
        "dependencies": ["Ruby 3"],
        "subcommands": [
          { "name": "asm", "desc": "Generate plain Whitespace assembly from INPUT and write it to OUTPUT." },
          { "name": "compile", "desc": "Compile a Whitespace program to native machine instructions." },
          { "name": "convert", "desc": "Convert a Whitespace program from one format to another." },
          { "name": "docs", "desc": "Search for matching terms in the documentation of the standard library." },
          { "name": "exec", "desc": "Execute a Whitespace program using the specified interpreter." },
          { "name": "help", "desc": "Describe available commands or one specific command." },
          { "name": "image", "desc": "Generate a PNG file of syntax-highlighted Whitespace." }
        ],
        "notes": "TODO document options"
      }
    ]
  },
  {
    "name": "Spiceweight",
    "path": "crystal/collidedscope-spiceweight",
    "authors": ["Collided Scope"],
    "license": "Unlicense",
    "languages": ["Crystal"],
    "tags": ["interpreter", "benchmarking", "programs"],
    "date": "2020-12-11 19:09:25 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/collidedscope/spiceweight"],
    "bounds": {
      "precision": "arbitrary",
      "arg_precision": "int64",
      "label_precision": "int64",
      "stack_cap": "unbounded",
      "heap_min": "unbounded",
      "heap_max": "unbounded",
      "heap_cap": "unbounded",
      "label_cap": "uint64",
      "instruction_cap": "int32"
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "spwt",
        "dependencies": ["Crystal"],
        "build": "make",
        "usage": "$0 [options] <file>",
        "options": [
          {
            "short": "r",
            "long": "report",
            "desc": "Display stack, heap, and instruction count after executing"
          },
          {
            "short": "b",
            "long": "bench",
            "desc": "Benchmark calls to labels whose names begin with 'bench'. Labels in Whitespace code are purely numerical, of course, so this relies on some other tool having previously generated a symbol table mapping label names to their corresponding numbers. The Spitewaste assembler is one such tool."
          },
          { "short": "h", "long": "help", "desc": "Show this help" }
        ],
        "option_parse": "Crystal option_parser"
      }
    ]
  },
  {
    "name": "Whitespacy",
    "path": "python/francoisrozet-whitespacy",
    "authors": ["François Rozet"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["polyglot formatter"],
    "date": "2020-12-08 16:33:12 +0100",
    "spec_version": "-",
    "source": ["https://github.com/francois-rozet/whitespacy"],
    "commands": [
      {
        "type": "polyglot formatter",
        "bin": "whitespacy.py",
        "usage": "python $0 [-o <output_file> | --output <output_file>] [-v | --verbose] <c_file> <whitespace_file>",
        "options": [
          { "short": "o", "long": "output", "desc": "output file" },
          { "short": "v", "long": "verbose", "desc": "print minified version on std" }
        ],
        "option_parse": "Python argparse"
      }
    ],
    "notes": "Polyglot formatter for C and Whitespace"
  },
  {
    "name": "Whitespace Language - Online Translator/Interpreter",
    "authors": ["dCode"],
    "license": "MIT (JavaScript) and proprietary (PHP)",
    "languages": ["JavaScript", "PHP"],
    "tags": ["interpreter", "text to Whitespace", "mapping"],
    "date": "2020-09-23",
    "spec_version": "0.2",
    "source": ["https://www.dcode.fr/whitespace-language"],
    "mappings": [{ "space": "S", "tab": "T", "lf": "L", "before_stl": true }],
    "notes": "Interpreter uses javascript/luilak-ws2js, text to Whitespace converter is proprietary PHP"
  },
  {
    "name": "rustws",
    "path": "rust/luminight",
    "authors": ["Luminight"],
    "license": "MIT",
    "languages": ["Rust"],
    "tags": ["library", "mapping"],
    "date": "2020-08-04 15:04:18 +0200",
    "spec_version": "0.2",
    "source": ["https://github.com/Luminighty/rustws"],
    "mappings": [{ "space": "S", "tab": "T", "lf": "L", "spaces_between": false, "ignore_case": true }],
    "commands": [
      {
        "type": "library",
        "bin": "librustws.rlib",
        "build": "cargo build --release",
        "notes": "No main() entry point"
      },
      {
        "type": "mapping",
        "bin": "wsconvert.py",
        "usage": "$0 <file>",
        "output": "<file_no_ext>.ws",
        "notes": "Converts from mapping to Whitespace. Ignores lines prefixed with `--`."
      }
    ]
  },
  {
    "name": "Whitespace",
    "path": "javascript/kosei",
    "authors": ["kosei28"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2020-08-03 23:19:28 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/kosei28/Whitespace"]
  },
  {
    "name": "SpaceMan",
    "path": "haskell/ft-spaceman",
    "authors": ["Frank Terbeck"],
    "license": "BSD-2-Clause",
    "languages": ["Haskell"],
    "tags": ["interpreter"],
    "date": "2020-07-09 22:05:36 +0200",
    "spec_version": "0.3",
    "source": [
      "https://gitlab.com/ft/spaceman",
      "https://github.com/ft/spaceman",
      "http://bewatermyfriend.org/p/2020/000/",
      "https://news.ycombinator.com/item?id=24763312"
    ],
    "commands": [
      {
        "build": "cabal build",
        "usage": "cabal run spaceman -- [-d | --dump-ast] [-t | --transform-labels] [-h | --help] [-V | --version] [--numeric-version] <file>",
        "options": [
          { "short": "d", "long": "dump-ast", "desc": "Dump Program AST instead of executing" },
          { "short": "t", "long": "transform-labels", "desc": "Transform Label Names to ASCII" },
          { "short": "h", "long": "help", "desc": "Display help message" },
          { "short": "V", "long": "version", "desc": "Print version information" },
          { "long": "numeric-version", "desc": "Print just the version number" }
        ],
        "option_parse": "Haskell System.Console.CmdArgs",
        "notes": "TODO figure out how to run without `cabal run`"
      }
    ]
  },
  {
    "name": "whitespace",
    "path": "cpp/ricardoluis",
    "authors": ["Ricardo Luís Vaz Silva"],
    "license": "Unlicense",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2020-06-03 01:52:57 -0300",
    "spec_version": "0.3",
    "source": ["https://github.com/RicardoLuis0/whitespace"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "g++ -O3 -Wall -std=c++11 -o whitespace whitespace.cpp",
        "build_errors": "`#include <conio.h>` not found, `floor` cannot be used in a constant expression",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "WhiteSpace Assembler",
    "path": "haskell/helvm-wsa",
    "authors": ["Kamil Adam"],
    "license": "none",
    "languages": ["Haskell"],
    "tags": ["assembler"],
    "date": "2020-05-18 12:56:20 +0200",
    "spec_version": "0.2",
    "source": ["https://github.com/helvm/wsa"]
  },
  {
    "name": "HelPA",
    "path": "haskell/helvm-helpa",
    "authors": ["Kamil Adam"],
    "license": "Apache-2.0 or MIT",
    "languages": ["Haskell/Eta"],
    "tags": ["assembler"],
    "date": "2020-05-09 17:49:43 +0200",
    "spec_version": "0.2",
    "source": ["https://github.com/helvm/helpa"],
    "whitespace": {
      "nonstandard": [
        { "name": "PushS", "args": ["string"] },
        { "name": "BranchP", "args": ["label"] },
        { "name": "BranchNZ", "args": ["label"] },
        { "name": "BranchPZ", "args": ["label"] },
        { "name": "BranchPN", "args": ["label"] },
        { "name": "BranchNP", "args": ["label"] },
        { "name": "Noop" },
        { "name": "DebugPrintStack" },
        { "name": "DebugPrintHeap" },
        { "name": "Include", "args": ["ident"] },
        { "name": "Test", "args": ["int"] },
        { "name": "ValueString", "args": ["ident", "string"] },
        { "name": "ValueInteger", "args": ["ident", "uint"] },
        { "name": "IfOption", "args": ["ident"] },
        { "name": "ElseOption" },
        { "name": "EndOption" },
        { "name": "ElseIfOption", "args": ["ident"] }
      ]
    },
    "commands": [{ "bin": "helpa", "build": "cabal build", "build_errors": "-XMonadFailDesugaring is deprecated" }]
  },
  {
    "name": "HelMA",
    "path": "haskell/helvm-helma",
    "authors": ["Kamil Adam"],
    "license": "Apache-2.0 or MIT",
    "languages": ["Haskell/Eta"],
    "tags": ["interpreter"],
    "date": "2020-05-08 13:18:50 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/helvm/helma"],
    "commands": [{ "bin": "helma", "build": "cabal build", "build_errors": "-XMonadFailDesugaring is deprecated" }]
  },
  {
    "name": "Whitelie",
    "description": "Self-hosted Whitespace compiler for 64-bit Linux",
    "path": "whitespace/keens-whitelie",
    "authors": ["κeen"],
    "license": "GPL-2.0-or-later",
    "languages": ["Whitespace", "Ruby"],
    "tags": ["compiler", "assembler", "programs"],
    "date": "2020-03-31 23:46:45 +0900",
    "spec_version": "0.3",
    "source": [
      "https://github.com/KeenS/whitelie",
      "https://gist.github.com/KeenS/6081b0c802a4e575ddbacb1930680870"
    ],
    "assembly": {
      "instructions": {
        "push": ["Stack push"],
        "dup": ["Stack dup"],
        "copy": ["Stack copy"],
        "swap": ["Stack swap"],
        "drop": ["Stack discard"],
        "slide": ["Stack slide"],
        "add": ["Arith add"],
        "sub": ["Arith sub"],
        "mul": ["Arith mul"],
        "div": ["Arith div"],
        "mod": ["Arith mod"],
        "store": ["Heap store"],
        "retrieve": ["Heap retrieve"],
        "label": ["Flow label"],
        "call": ["Flow call"],
        "jmp": ["Flow jump"],
        "jz": ["Flow jz"],
        "jn": ["Flow jneg"],
        "ret": ["Flow return"],
        "end": ["Flow end"],
        "printc": ["IO outchar"],
        "printi": ["IO outnumber"],
        "readc": ["IO readchar"],
        "readi": ["IO readnumber"]
      },
      "case_sensitive_instructions": true,
      "line_comment_prefix": "#",
      "extension": "wsa"
    }
  },
  {
    "name": "WhitespaceInterpreter",
    "path": "csharp/denislabrecque",
    "authors": ["Denis G. Labrecque"],
    "license": "none",
    "languages": ["C#"],
    "tags": ["interpreter"],
    "date": "2020-03-26 22:16:49 -0500",
    "spec_version": "0.2 incomplete",
    "source": ["https://github.com/DenisLabrecque/Whitespace-Interpreter"],
    "assembly": {
      "instructions": {
        "push": ["Push"],
        "dup": ["Duplicate"],
        "swap": ["Swap"],
        "drop": ["Discard"],
        "add": ["Add"],
        "sub": ["Subtract"],
        "mul": ["Multiply"],
        "store": ["Store"],
        "retrieve": ["Retrieve"],
        "end": ["Halt"],
        "printc": ["OutputCharacter"],
        "printi": ["OutputNumber"]
      },
      "usage": ["enums"]
    },
    "commands": [
      {
        "type": "interpreter",
        "build": "msbuild /p:Configuration=Debug /t:build /restore WhitespaceInterpreter/WhitespaceInterpreter.csproj"
      }
    ],
    "notes": "Only implements push, dup, swap, drop, add, sub, mul, store, retrieve, end, printc, and printi"
  },
  {
    "name": "EvanescoJS",
    "path": "javascript/damle-evanescojs",
    "authors": ["Atharv Damle"],
    "license": "GPL-3.0-or-later",
    "languages": ["JavaScript"],
    "tags": ["text to Whitespace", "web app"],
    "date": "2020-03-14 00:42:59 +1100",
    "spec_version": "-",
    "source": ["https://github.com/AD9000/EvanescoJS"]
  },
  {
    "name": "Evanesco",
    "path": "python/damle-evanesco",
    "authors": ["Atharv Damle"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["text to Whitespace"],
    "date": "2020-02-20 09:18:38 +1100",
    "spec_version": "-",
    "source": ["https://github.com/AD9000/Evanesco"]
  },
  {
    "name": "WhiteSpaceInterpreter",
    "path": "python/hearnderek",
    "authors": ["Derek Hearn"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2020-02-09 09:22:36 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/hearnderek/WhiteSpaceInterpreter"]
  },
  {
    "name": "Whitespace Interpreter in JavaScript",
    "authors": ["Arnauld"],
    "license": "CC-BY-SA-4.0",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2020-02-01",
    "spec_version": "0.3",
    "source": ["https://codegolf.stackexchange.com/questions/198694/write-a-whitespace-interpreter/198770#198770"]
  },
  {
    "name": "Whitespace Lang Compiler",
    "path": "javascript/wdalmut",
    "authors": ["Walter Dal Mut"],
    "license": "ISC",
    "languages": ["JavaScript"],
    "tags": ["disassembler"],
    "date": "2019-12-28 16:28:47 +0100",
    "spec_version": "0.2",
    "source": ["https://github.com/wdalmut/whitespace-lang-compiler"]
  },
  {
    "name": "WhitespaceAssembler",
    "path": "csharp/littlebughunter-assembler",
    "authors": ["Paul (littleBugHunter)"],
    "license": "MIT",
    "languages": ["C#"],
    "tags": ["assembler", "programs"],
    "date": "2019-12-27 01:01:55 +0100",
    "spec_version": "0.2",
    "source": ["https://github.com/littleBugHunter/WhitespaceAssembler"],
    "assembly": {
      "instructions": {
        "push": ["push <number>", "push <address>"],
        "dup": ["dup"],
        "swap": ["swap"],
        "drop": ["pop"],
        "add": [
          "add",
          "add <number>",
          "add <address>",
          "add <address> <number>",
          "add <number> <address>",
          "add <address> <address>"
        ],
        "sub": [
          "sub",
          "sub <number>",
          "sub <address>",
          "sub <address> <number>",
          "sub <number> <address>",
          "sub <address> <address>"
        ],
        "mul": [
          "mul",
          "mul <number>",
          "mul <address>",
          "mul <address> <number>",
          "mul <number> <address>",
          "mul <address> <address>"
        ],
        "div": [
          "div",
          "div <number>",
          "div <address>",
          "div <address> <number>",
          "div <number> <address>",
          "div <address> <address>"
        ],
        "mod": [
          "mod",
          "mod <number>",
          "mod <address>",
          "mod <address> <number>",
          "mod <number> <address>",
          "mod <address> <address>"
        ],
        "store": ["store", "store <number>", "store <number> <number>"],
        "retrieve": ["retrieve", "retrieve <number>"],
        "label": ["lbl .<label>"],
        "call": ["call .<label>"],
        "jmp": ["jmp .<label>"],
        "jz": ["jpz .<label>"],
        "jn": ["jpn .<label>"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["print_char"],
        "printi": ["print_number"],
        "readc": ["read_char"],
        "readi": ["read_number"]
      },
      "patterns": {
        "address": "\\*<variable>",
        "char": "'.'",
        "hex": "#[0-9A-Fa-f]+",
        "int": "[+-]?[0-9]+",
        "number": "<int>|<hex>|<char>|&<variable>",
        "variable": "[^ \t]+"
      },
      "case_sensitive_instructions": false,
      "line_comment_prefix": "//",
      "extension": "txt"
    },
    "commands": [
      {
        "type": "assembler",
        "bin": "bin/Debug/WhitespaceAssembler.exe",
        "dependencies": ["Mono"],
        "build": "msbuild /p:Configuration=Debug WhitespaceAssembler.csproj",
        "usage": "mono $0 <file> <output_file>",
        "output": "<output_file>"
      }
    ],
    "notes": "<number> is a number literal or the value of a variable (formats: <int>, #<hex>, '<char>', and &<variable>).\n<address> is the value on the heap at the variable value (format: *<variable>), i.e. `push <variable> retrieve`.\n<int> is a base 10 integer, i.e. /[+-]?[0-9]+/.\n<hex> is a base 16 integer, i.e. /[0-9A-Fa-f]+/.\n<char> is one UTF-16 character, escape sequences aren't supported.\n<label> and <variable> values increment (with separate counters), starting at 0."
  },
  {
    "name": "whitespace_compiler",
    "path": "cpp/malkiewiczm",
    "authors": ["Michael Malkiewicz"],
    "license": "none",
    "languages": ["C++", "Yacc", "Lex"],
    "tags": ["language", "programs"],
    "date": "2019-10-20",
    "spec_version": "0.2",
    "source": ["https://github.com/malkiewiczm/whitespace_compiler"],
    "commands": [
      {
        "type": "language compiler",
        "bin": "compile",
        "dependencies": ["Flex", "Bison"],
        "build": "make",
        "usage": "$0 [-h] [-a] [-i] <file>",
        "options": [
          { "short": "h", "desc": "show this help" },
          { "short": "a", "desc": "include annotations in compiler output" },
          { "short": "i", "desc": "include debug instructions in compiler output" }
        ],
        "option_parse": "manual"
      }
    ],
    "notes": "Creation date mentioned in README"
  },
  {
    "name": "Whitespace UnC",
    "path": "python/ilikepython256-whitespace-unc",
    "authors": ["Python Whiz 256"],
    "license": "GPL-3.0-or-later",
    "languages": ["Python"],
    "tags": ["assembler", "web client", "programs"],
    "date": "2019-09-24 10:11:31 -0600",
    "spec_version": "0.3",
    "source": ["https://github.com/ILikePython256/Whitespace_UnC"],
    "assembly": {
      "instructions": {
        "push": ["MOD.PUSH"],
        "dup": ["MOD.DUPE"],
        "copy": ["MOD.COPY"],
        "swap": ["MOD.SWAP"],
        "drop": ["MOD.POP"],
        "slide": ["MOD.SLDE"],
        "add": ["MATH.ADD"],
        "sub": ["MATH.SUB"],
        "mul": ["MATH.MULT"],
        "div": ["MATH.DIV"],
        "mod": ["MATH.MOD"],
        "store": ["HEAP.STOR"],
        "retrieve": ["HEAP.RET"],
        "label": ["FLOW.LABL"],
        "call": ["FLOW.SUB"],
        "jmp": ["FLOW.JUMP"],
        "jz": ["FLOW.JMPZ"],
        "jn": ["FLOW.JMPN"],
        "ret": ["FLOW.RET"],
        "end": ["FLOW.HALT"],
        "printc": ["IO.OUT"],
        "printi": ["IO.NOUT"],
        "readc": ["IO.IN"],
        "readi": ["IO.NIN"]
      },
      "case_sensitive_instructions": false
    },
    "notes": "Web client and test programs are on web branch"
  },
  {
    "name": "zerospace-lang",
    "path": "javascript/loklaan-zerowidth-lang",
    "authors": ["Lochlan Bunn"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["interpreter", "mapping"],
    "date": "2019-07-25 16:02:44 +1000",
    "spec_version": "0.3",
    "source": ["https://github.com/loklaan/zerowidth-lang"],
    "mappings": [{ "space": "&#8203;", "tab": "&#8204;", "lf": "\n", "extension": "zw" }],
    "notes": "Fork of vii5ard/whitespace"
  },
  {
    "name": "WSC",
    "path": "ocaml/jgkaplan-wsc",
    "authors": ["Joshua Kaplan"],
    "license": "MIT",
    "languages": ["OCaml"],
    "tags": ["language", "programs"],
    "date": "2019-07-04 02:09:08 -0400",
    "spec_version": "0.3",
    "source": ["https://github.com/jgkaplan/whitespaceTranspiler"],
    "commands": [
      {
        "type": "language compiler",
        "bin": "main.byte",
        "dependencies": ["opam"],
        "install_dependencies": ["opam install ocamlbuild memhir"],
        "build": "make",
        "usage": "$0 [--help] <file>",
        "output": "<file_no_ext>.ws",
        "options": [{ "short": "help", "long": "help", "desc": "Display this list of options" }],
        "option_parse": "OCaml Arg"
      }
    ]
  },
  {
    "name": "Marginal",
    "path": "haskell/jhmcstanton-marginal",
    "authors": ["Jim McStanton"],
    "license": "BSD-3-Clause",
    "languages": ["Haskell", "Yacc"],
    "tags": ["interpreter"],
    "date": "2019-06-28 20:19:29 -0500",
    "spec_version": "0.2",
    "source": ["https://github.com/jhmcstanton/marginal"],
    "commands": [
      {
        "install_dependencies": ["stack setup"],
        "build": "stack build",
        "build_errors": "`stack setup` fails with link error"
      }
    ]
  },
  {
    "name": "Eso",
    "path": "scala/dashlambda-eso",
    "authors": ["Dash-Lambda"],
    "license": "none",
    "languages": ["Scala"],
    "tags": ["interpreter", "assembler"],
    "date": "2019-06-19 03:00:21 -0400",
    "spec_version": "0.2",
    "source": ["https://github.com/Dash-Lambda/Eso"]
  },
  {
    "name": "baudelaire-whitespace",
    "description": "Web service that executes baudelaire.ws with the given word using the EsCo interpreter",
    "path": "python/qwhxm-baudelaire",
    "authors": ["Marek Tomáštík"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["web service", "programs"],
    "date": "2019-06-08 23:22:47 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/qwhxm/baudelaire-whitespace"]
  },
  {
    "name": "Nebula",
    "path": "go/andrewarchi-nebula",
    "authors": ["Andrew Archibald"],
    "license": "MIT",
    "languages": ["Go", "LLVM", "Whitespace"],
    "tags": ["compiler", "optimizer", "disassembler", "bit packer", "programs"],
    "date": "2019-06-05 23:59:44 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/andrewarchi/nebula"],
    "bounds": { "precision": "fixed" },
    "whitespace": { "extension": "ws" },
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["drop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["<label>:", "label_<number>:"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["end"],
        "printc": ["printc"],
        "printi": ["printi"],
        "readc": ["readc"],
        "readi": ["readi"],
        "shuffle": ["shuffle"],
        "dumpstack": ["dumpstack"],
        "dumpheap": ["dumpheap"],
        "dumptrace": ["trace"]
      },
      "indentation": "    ",
      "usage": ["disassembler"],
      "extension": "wsa"
    },
    "commands": [
      {
        "type": "compiler",
        "bin": "nebula",
        "dependencies": ["LLVM"],
        "build": "go mod init github.com/andrewarchi/nebula && go mod tidy && go build",
        "build_errors": "Requires LLVM",
        "option_parse": "Go flag",
        "subcommands": [
          { "name": "pack", "desc": "compress program to bit packed format" },
          { "name": "unpack", "desc": "uncompress program from bit packed format" },
          { "name": "graph", "desc": "print Nebula IR control flow graph" },
          { "name": "ast", "desc": "emit Whitespace AST" },
          { "name": "ir", "desc": "emit Nebula IR" },
          { "name": "llvm", "desc": "emit LLVM IR" }
        ],
        "notes": "TODO document options"
      },
      { "type": "interpreter", "bin": "programs/interpret.wsa" }
    ]
  },
  {
    "name": "Whitespace VM",
    "path": "rust/nareshganduri",
    "authors": ["Naresh Ganduri"],
    "license": "none",
    "languages": ["Rust"],
    "tags": ["interpreter"],
    "date": "2019-05-13 03:46:04 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/nareshganduri/WhitespaceVM"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "target/release/whitespace-vm",
        "build": "cargo build --release",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "Akaza",
    "path": "ruby/pocke-akaza",
    "authors": ["Masataka Pocke Kuwabara"],
    "license": "CC0-1.0",
    "languages": ["Ruby"],
    "tags": ["interpreter", "assembler"],
    "date": "2019-04-28 11:26:08 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/pocke/akaza"]
  },
  {
    "name": "whitespace-language-converter",
    "path": "python/drafear-converter",
    "authors": ["Takeshi Nishikawa"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["assembler"],
    "date": "2019-03-30 02:52:41 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/drafear/whitespace-language-converter"],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["drop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["<label>:"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["end"],
        "printc": ["printc"],
        "printi": ["printi"],
        "readc": ["readc"],
        "readi": ["readi"]
      },
      "case_sensitive_instructions": true
    }
  },
  {
    "name": "go-wspace",
    "path": "go/tempxla-go-wspace",
    "authors": ["tempxla"],
    "license": "MIT",
    "languages": ["Go"],
    "tags": ["interpreter"],
    "date": "2019-02-24 18:51:26 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/tempxla/go-wspace"],
    "bounds": {
      "precision": "Go int",
      "label_precision": "arbitrary",
      "stack_cap": "unbounded",
      "call_stack_cap": "unbounded",
      "heap_min": "unbounded",
      "heap_max": "unbounded",
      "heap_cap": "unbounded",
      "label_cap": "unbounded",
      "instruction_cap": "unbounded"
    },
    "assembly": {
      "instructions": {
        "push": ["psh"],
        "dup": ["dup"],
        "swap": ["swp"],
        "drop": ["pop"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["sto"],
        "retrieve": ["lod"],
        "label": ["mrk"],
        "call": ["cll"],
        "jmp": ["jmp"],
        "jz": ["jze"],
        "jn": ["jne"],
        "ret": ["ret"],
        "end": ["end"],
        "printc": ["wtc"],
        "printi": ["wtn"],
        "readc": ["rdc"],
        "readi": ["rdn"]
      },
      "usage": ["debug"]
    },
    "commands": [{ "type": "interpreter", "bin": "bin/go-wspace", "build": "make", "usage": "$0 <file>" }]
  },
  {
    "name": "Hello-Whitespace",
    "path": "whitespace/tewort-hello-whitespace",
    "authors": ["David (Tewort)"],
    "license": "none",
    "languages": ["Whitespace"],
    "tags": ["programs"],
    "date": "2019-01-28 17:17:14 +0300",
    "spec_version": "0.2",
    "source": ["https://github.com/Tewort/Hello-Whitespace"]
  },
  {
    "name": "Whitespace Interpreter",
    "path": "rust/kaisugi",
    "authors": ["Kaito Sugimoto"],
    "license": "none",
    "languages": ["Rust"],
    "tags": ["interpreter", "programs"],
    "date": "2018-11-23 21:35:24 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/HelloRusk/WhitespaceInterpreter"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "wi",
        "build": "rustc -o wi whitespace_interpreter.rs",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "hohoho",
    "path": "python/freyamade-hohoho",
    "authors": ["Freya Madeline Broderick", "Omar Sallam"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["mapping"],
    "date": "2018-11-22 18:48:52 +0000",
    "spec_version": "-",
    "source": ["https://github.com/freyamade/hohoho"],
    "mappings": [{ "space": "snow", "tab": "hohoho", "lf": "\n", "spaces_between": true, "extension": "ho" }]
  },
  {
    "name": "whitespace-interpreter",
    "path": "python/adapap",
    "authors": ["Adam Papenhausen"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2018-11-16 01:16:42 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/adapap/whitespace-interpreter"]
  },
  {
    "name": "whitespace",
    "path": "python/ahl27",
    "authors": ["Aidan Lakshman"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["interpreter", "text to Whitespace", "programs"],
    "date": "2018-11-08 00:38:53 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/ahl27/whitespace"],
    "whitespace": { "extension": "wsp" }
  },
  {
    "name": "Whitespace-Compiler",
    "path": "java/wysang",
    "authors": ["wysang"],
    "license": "none",
    "languages": ["Java", "ANTLR4"],
    "tags": ["grammar", "incomplete"],
    "date": "2018-10-21 19:31:04 -0700",
    "spec_version": "0.3 incomplete",
    "source": ["https://github.com/wysang/Whitespace-Compiler"],
    "whitespace": { "extension": "whitespace" },
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["copy"],
        "copy": ["copynth"],
        "swap": ["swicth"],
        "drop": ["pop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mult"],
        "div": ["div"],
        "mod": ["mod"],
        "label": ["mark"],
        "call": ["call"],
        "jmp": ["jump"],
        "jz": ["jumpz"],
        "jn": ["jumpn"],
        "ret": ["ends"],
        "end": ["endp"],
        "printc": ["outchar"],
        "printi": ["outnum"],
        "readc": ["readchar"],
        "readi": ["readnum"]
      }
    }
  },
  {
    "name": "Hello World.txt",
    "path": "whitespace/eah-hello-world",
    "authors": ["Ethan Hall"],
    "license": "MIT",
    "languages": ["Whitespace"],
    "tags": ["programs"],
    "date": "2018-10-06 00:23:08 -0500",
    "spec_version": "0.2",
    "source": [
      "https://github.com/wspace-lang/eah-hello-world-whitespace",
      "https://github.com/Aniket965/Hello-world/tree/master/Whitespace"
    ]
  },
  {
    "name": "nospace",
    "path": "cpp/buyoh-nospace",
    "authors": ["舞葉 (Mai Buyoh)"],
    "license": "Unlicense",
    "languages": ["C++", "Ruby"],
    "tags": ["language", "interpreter", "programs"],
    "date": "2018-09-05 15:36:34 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/buyoh/nospace"],
    "commands": [
      {
        "type": "language compiler",
        "bin": "maicomp",
        "dependencies": ["make"],
        "build": "make release",
        "usage": "$0 [<file>]",
        "notes": "Reads from stdin, if no file is given"
      },
      { "type": "interpreter", "bin": "vm/run.rb", "usage": "ruby $0 <file> [<stdin_file>]" },
      { "type": "test", "bin": "test.rb", "usage": "ruby $0" }
    ]
  },
  {
    "name": "Whitespace compiler for 64-bit macOS",
    "path": "nasm/ryzheboka",
    "authors": ["Elena Mokeeva"],
    "license": "none",
    "languages": ["NASM", "Python", "C"],
    "tags": ["interpreter", "mapping"],
    "date": "2018-09-04 11:25:14 +0200",
    "spec_version": "0.2",
    "source": ["https://github.com/ryzheboka/Whitespace"],
    "mappings": [{ "space": "A", "tab": "B", "lf": "C", "spaces_between": false }],
    "commands": [
      {
        "type": "compiler",
        "bin": "wsCompiler.py",
        "dependencies": ["NASM"],
        "usage": "python3 wsCompiler.py <file> && nasm -fmacho64 <file_no_ext>.asm && ld -o <file_no_ext> <file_no_ext>.o && ./<file_no_ext>",
        "output": "<file_no_ext>.asm"
      },
      {
        "type": "interpreter",
        "bin": "wsInterpreter",
        "build": "gcc -O3 -Wall -o wsInterpreter wsInterpreter.c",
        "usage": "$0 < <file>",
        "notes": "Only implements push, dup, printc, and printi"
      }
    ],
    "notes": "FF and CR also grouped with LF in mapping"
  },
  {
    "name": "whitespace-interpreter",
    "path": "java/wrotycz",
    "authors": ["Kamil Węglarz"],
    "license": "MIT",
    "languages": ["Java"],
    "tags": ["interpreter"],
    "date": "2018-05-21 13:44:13 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/wrotycz/whitespace-interpreter"],
    "notes": "Codewars solution"
  },
  {
    "name": "whitespace",
    "path": "ruby/nishiwakki",
    "authors": ["nishiwakki"],
    "license": "none",
    "languages": ["Ruby"],
    "tags": ["interpreter"],
    "date": "2018-05-17 02:29:29 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/nishiwakki/whitespace"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace.rb",
        "usage": "ruby $0 <file>",
        "notes": "Fails on Whitespace programs with comments"
      }
    ]
  },
  {
    "name": "space",
    "path": "kotlin/ze-space",
    "authors": ["Zakaria Elkatani"],
    "license": "none",
    "languages": ["Kotlin"],
    "tags": ["interpreter", "disassembler"],
    "date": "2018-04-21 21:02:23 -0400",
    "spec_version": "0.3",
    "source": ["https://github.com/ze/space"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "build/libs/space.jar",
        "dependencies": ["Java 8"],
        "build": "./gradlew",
        "build_errors": "Dependencies not packaged"
      }
    ]
  },
  {
    "name": "Respace",
    "path": "cpp/andrewarchi-respace",
    "authors": ["Andrew Archibald"],
    "license": "MIT",
    "languages": ["C++"],
    "tags": ["interpreter", "disassembler", "bit packer", "programs"],
    "date": "2018-04-15 21:35:34 -0600",
    "spec_version": "0.3",
    "source": ["https://github.com/andrewarchi/respace"],
    "bounds": { "precision": "fixed" },
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["drop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["label_<number>:"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["end"],
        "printc": ["printc"],
        "printi": ["printi"],
        "readc": ["readc"],
        "readi": ["readi"],
        "dumpstack": ["debug_printstack"],
        "dumpheap": ["debug_printheap"]
      },
      "extension": "wsa"
    },
    "commands": [
      { "type": "interpreter", "bin": "respace", "build": "make", "usage": "$0 <file>" },
      { "type": "interpreter", "bin": "programs/ws/interpreter.wsa" }
    ],
    "notes": "Disassembler and bit packer are only available via code modification"
  },
  {
    "name": "projectOne",
    "description": "GUI to convert between Whitespace syntax and S/T/L",
    "path": "csharp/north-projectone",
    "authors": ["Jacob North"],
    "license": "none",
    "languages": ["C#"],
    "tags": ["mapping", "GUI"],
    "date": "2018-04-11 01:33:40 -0400",
    "spec_version": "-",
    "source": ["https://github.com/North15/projectOne"],
    "mappings": [{ "space": "S", "tab": "T", "lf": "L", "extension": "txt" }],
    "commands": [
      {
        "type": "ide",
        "bin": "The-Code/WhitespaceInterpreter/bin/Debug/WhitespaceInterpreter.exe",
        "build": "msbuild /p:Configuration=Debug The-Code/WhitespaceInterpreter/WhitespaceInterpreter.csproj",
        "usage": "mono $0",
        "run_errors": "The Carbon driver has not been ported to 64-bit, so very few parts of Windows.Forms work properly"
      }
    ]
  },
  {
    "name": "whitespace_interpreter",
    "path": "python/maximegoyette",
    "authors": ["Maxime Goyette"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2018-03-09 16:19:48 -0500",
    "spec_version": "incomplete",
    "source": ["https://github.com/MaximeGoyette/whitespace_interpreter"],
    "notes": "Partial Codewars solution"
  },
  {
    "name": "erasure",
    "path": "clojure/jmesyou-erasure",
    "authors": ["James You"],
    "license": "MIT",
    "languages": ["Clojure"],
    "tags": ["interpreter"],
    "date": "2018-02-24 19:28:32 -0500",
    "spec_version": "0.2",
    "source": ["https://github.com/jmesyou/erasure", "https://github.com/wspace-lang/jmesyou-erasure-clojure"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "target/uberjar/erasure-2.0-standalone.jar",
        "dependencies": ["Leiningen"],
        "build": "lein uberjar",
        "build_errors": "Parser namespace is clj-whitespace, not erasure",
        "usage": "java -jar $0 [-i | --intermediate] [-h | --help] <file>",
        "options": [
          {
            "short": "i",
            "long": "intermediate",
            "desc": "Generate intermediate Clojure for the Whitespace source"
          },
          { "short": "h", "long": "help" }
        ],
        "option_parse": "clojure.tools.cli"
      }
    ]
  },
  {
    "name": "whitespace-interperter",
    "path": "python/rumaxwell",
    "authors": ["RuMaxwell"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2018-02-21 22:02:54 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/RuMaxwell/whitespace-interpreter"],
    "whitespace": { "extension": "whitespace" }
  },
  {
    "name": "whitespace-lang",
    "path": "javascript/loklaan-whitespace-lang",
    "authors": ["Lochlan Bunn"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2018-02-14 07:32:38 +1000",
    "spec_version": "0.3",
    "source": ["https://github.com/loklaan/whitespace-lang"],
    "notes": "Fork of vii5ard/whitespace"
  },
  {
    "name": "Whitespace",
    "path": "c/sandeep",
    "authors": ["Sandeep Varma"],
    "license": "none",
    "languages": ["C", "Yacc", "Lex"],
    "tags": ["interpreter", "programs"],
    "date": "2017-11-11 05:17:01 +0000",
    "spec_version": "0.3 incomplete",
    "source": ["https://github.com/Sandeep023/Whitespace"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "white",
        "build": "gcc -O3 -Wall -o white y.tab.c lex.yy.c",
        "usage": "$0",
        "notes": "Filename is hardcoded to ./basic.ws"
      }
    ],
    "notes": "Has git conflict markers remaining in source"
  },
  {
    "name": "Whitespace-interpreter",
    "path": "python/bornlex",
    "authors": ["Bornlex"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2017-08-09 20:44:04 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/Bornlex/Whitespace-interpreter"]
  },
  {
    "name": "whitespace-interpreter",
    "path": "cpp/benajmin",
    "authors": ["Benjamin Wilkins"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter", "programs"],
    "date": "2017-06-05 09:34:24 -0400",
    "spec_version": "0.2",
    "source": ["https://github.com/benajmin/whitespace-interpreter"],
    "bounds": { "precision": "fixed" },
    "commands": [
      { "type": "interpreter", "bin": "WhitespaceInterpreter.out", "build": "make", "usage": "$0 <file>" }
    ]
  },
  {
    "name": "wsm2ws",
    "path": "perl/ephphatha-wsm2ws",
    "authors": ["Andrew James"],
    "license": "MIT",
    "languages": ["Perl"],
    "tags": ["assembler", "programs"],
    "date": "2017-05-28 19:40:26 +1000",
    "spec_version": "0.3",
    "source": ["https://github.com/ephphatha/wsm2ws"],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap", "swa"],
        "drop": ["pop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod", "rem"],
        "store": ["store", "stor"],
        "retrieve": ["retrieve", "retr"],
        "label": ["<label>:", "label"],
        "call": ["call"],
        "jmp": ["jmp", "jump", "goto"],
        "jz": ["jez", "jz"],
        "jn": ["jlz", "jn"],
        "ret": ["ret"],
        "end": ["end", "exit"],
        "printc": ["ochar", "putchar"],
        "printi": ["onum", "putnum"],
        "readc": ["ichar", "getchar"],
        "readi": ["inum", "getnum"]
      },
      "line_comment_prefix": ";",
      "extension": "wsm"
    },
    "commands": [
      {
        "type": "assembler",
        "bin": "wsm2ws.pl",
        "dependencies": ["Perl"],
        "install_dependencies": [
          "perl -MCPAN -e 'install Algorithm::Combinatorics, File::Basename, Parse::Token::Lite, String::Unescape, Tie::RegexpHash'"
        ],
        "usage": "perl $0 <file>",
        "output": "<file_no_suffix:.wsm>.ws"
      }
    ],
    "notes": "Has optional assembly arguments"
  },
  {
    "name": "ws.vim",
    "path": "vim/rolf-ws-vim",
    "authors": ["Rolf Asmund"],
    "license": "none",
    "languages": ["Vim script"],
    "tags": ["syntax highlighting", "programs"],
    "date": "2017-05-15 17:41:44 +0000",
    "spec_version": "0.3",
    "source": ["https://github.com/rolf007/ws.vim"]
  },
  {
    "name": "Mr. White",
    "path": "erlang/derek-mrwhite",
    "authors": ["Derek Brown"],
    "license": "BSD-3-Clause",
    "languages": ["Erlang"],
    "tags": ["interpreter"],
    "date": "2017-03-23 09:48:51 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/derek121/mrwhite"],
    "commands": [{ "dependencies": ["Erlang", "Rebar3"], "build": "make", "build_errors": "Unclear how to run" }]
  },
  {
    "name": "Whitespace Esolang Compiler",
    "path": "c/tejaskasetty",
    "authors": ["Sushrith Arkal", "Tejas Kasetty", "Suhas Sumukh"],
    "license": "none",
    "languages": ["C", "Yacc", "Lex"],
    "tags": ["disassembler", "parser"],
    "date": "2017-03-21 12:42:53 +0530",
    "spec_version": "0.2",
    "source": ["https://gitlab.com/tejaskasetty/ws-compiler"],
    "assembly": {
      "instructions": {
        "push": ["push <number>"],
        "dup": ["dup"],
        "swap": ["swap"],
        "drop": ["pop"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["L<number>:"],
        "call": ["call F<number>"],
        "jmp": ["goto L<number>"],
        "jz": ["gotoiz L<number>"],
        "jn": ["gotoin L<number>"],
        "ret": ["return"],
        "end": ["end"],
        "printc": ["printchar"],
        "printi": ["printnum"],
        "readc": ["readchar"],
        "readi": ["readnum"]
      }
    },
    "commands": [
      {
        "type": "disassembler",
        "bin": "flex-bison/262_267_256/ws",
        "dependencies": ["make", "Flex", "Bison"],
        "build": "make",
        "usage": "$0 < <file>"
      }
    ]
  },
  {
    "name": "whitespace-scheme",
    "path": "scheme/niyarin",
    "authors": ["Akira Inoue"],
    "license": "MIT",
    "languages": ["Scheme"],
    "tags": ["interpreter"],
    "date": "2017-02-15 21:24:19 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/niyarin/whitespace-scheme"]
  },
  {
    "name": "whitepy",
    "path": "python/yasn-whitepy",
    "authors": ["Yasser Saleemi"],
    "license": "Apache-2.0",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2017-01-31 16:21:48 +0000",
    "spec_version": "0.2",
    "source": ["https://github.com/yasn77/whitepy"]
  },
  {
    "name": "WhitespaceGenerator",
    "path": "javascript/briantran-generator",
    "authors": ["Brian Tran"],
    "license": "none",
    "languages": ["JavaScript"],
    "tags": ["text to Whitespace"],
    "date": "2017-01-22 01:38:36 -0500",
    "spec_version": "0.2",
    "source": ["https://github.com/TranBrian10/WhitespaceGenerator"]
  },
  {
    "name": "whitespace.lol",
    "path": "lolcode/akers",
    "authors": ["D.E. Akers"],
    "license": "WTFPL",
    "languages": ["LOLCODE"],
    "tags": ["interpreter"],
    "date": "2016-11-21 01:10:33 -0500",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/akers-lolcode",
      "https://github.com/hostilefork/whitespacers/tree/master/lolcode"
    ],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace.lol",
        "dependencies": ["lci"],
        "usage": "cat <(echo <file>) - | lci $0",
        "notes": "When the program contains no read instructions, it can be run with `lci $0 <<< <file>`"
      }
    ]
  },
  {
    "name": "whitespac3",
    "path": "python/alecgraves-whitespac3",
    "authors": ["Alec Graves"],
    "license": "GPL-3.0-or-later",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2016-11-17 18:52:26 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/alecGraves/whitespac3"]
  },
  {
    "name": "WhiteSpaceInterpreter",
    "path": "java/eia",
    "authors": ["Zuleimi Esteffanny González Muñoz"],
    "license": "MIT",
    "languages": ["Java"],
    "tags": ["interpreter"],
    "date": "2016-10-27 09:58:09 -0500",
    "spec_version": "incomplete",
    "source": ["https://github.com/EIA-University/WhiteSpaceInterpreter"]
  },
  {
    "name": "whitespace-python",
    "path": "python/dwayne",
    "authors": ["Dwayne R. Crooks"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2016-08-31 05:09:16 -0400",
    "spec_version": "0.2",
    "source": ["https://github.com/dwayne/whitespace-python"]
  },
  {
    "name": "ws-frontend",
    "path": "cpp/sonicyang-ws-frontend",
    "authors": ["Yang Chung-Fan"],
    "license": "MIT",
    "languages": ["C++", "LLVM"],
    "tags": ["compiler"],
    "date": "2016-08-20 08:45:25 +0800",
    "spec_version": "0.2 incomplete",
    "source": ["https://github.com/sonicyang/ws-frontend"],
    "commands": [
      {
        "type": "compiler",
        "bin": "wsjit",
        "dependencies": ["LLVM"],
        "build_errors": "Requires LLVM",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "Whitespace",
    "path": "r/bmazoure",
    "authors": ["Bogdan Mazoure"],
    "license": "none",
    "languages": ["R"],
    "tags": ["interpreter", "grammar DFA"],
    "date": "2016-07-30 12:44:29 -0400",
    "spec_version": "0.2",
    "source": ["https://github.com/bmazoure/whitespace"],
    "whitespace": { "nonstandard": [{ "name": "jp", "seq": "LSL", "args": ["label"] }] },
    "commands": [
      {
        "type": "interpreter",
        "bin": "R/whitespace.R",
        "dependencies": ["R"],
        "install_dependencies": [
          "Rscript -e 'install.packages(c(\"compositions\", \"readr\"), repos=\"http://cran.us.r-project.org\")'"
        ],
        "usage": "Rscript -e 'source(\"R/whitespace.R\"); library(readr); compile(parse(dfa(read_file(\"<file>\"))))'"
      }
    ]
  },
  {
    "name": "White++",
    "path": "cpp/marcellippmann-whitepp",
    "authors": ["Marcel Lippmann"],
    "license": "GPL-3.0-or-later",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2016-07-27 17:01:11 +0200",
    "spec_version": "0.2",
    "source": [
      "https://github.com/wspace-lang/marcellippmann-whitepp",
      "https://web.archive.org/web/20200906224652/https://github.com/marcellippmann/Whitepp/"
    ],
    "commands": [{ "type": "interpreter", "bin": "bin/White++", "build": "make", "usage": "$0 <file>" }]
  },
  {
    "name": "whitespace-ruby",
    "path": "ruby/dwayne",
    "authors": ["Dwayne R. Crooks"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2016-07-11 15:39:42 -0400",
    "spec_version": "0.2",
    "source": ["https://github.com/dwayne/whitespace-ruby"]
  },
  {
    "name": "Whitespacers",
    "path": "rust/censoredusername-whitespace-rs",
    "authors": ["CensoredUsername"],
    "license": "MPL-2.0",
    "languages": ["Rust"],
    "tags": ["JIT", "assembler", "disassembler"],
    "date": "2016-06-19 01:53:07 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/CensoredUsername/whitespace-rs"],
    "bounds": { "precision": "arbitrary" },
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["pop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["set"],
        "retrieve": ["get"],
        "label": ["<label>:", "lbl <label>"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["pchr"],
        "printi": ["pnum"],
        "readc": ["ichr"],
        "readi": ["inum"]
      }
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "target/release/wsc",
        "build": "cargo build --release",
        "usage": "$0 [options] <file>",
        "options": [
          { "short": "h", "long": "help", "desc": "Display this message" },
          {
            "short": "f",
            "long": "format",
            "arg": "FORMAT",
            "type": "enum",
            "desc": "Input file format. The default is plain whitespace. Options are:",
            "values": [
              { "values": ["ws", "whitespace"], "desc": "Plain whitespace." },
              {
                "values": ["asm", "assembly"],
                "desc": "A human-readable assembly format. A description can be found below."
              }
            ]
          },
          {
            "short": "i",
            "long": "input",
            "arg": "INFILE",
            "type": "string",
            "desc": "File to read input from (defaults to stdin)"
          },
          {
            "short": "o",
            "long": "output",
            "arg": "OUTFILE",
            "type": "string",
            "desc": "File to write output to (defaults to stdout)"
          },
          {
            "short": "e",
            "long": "execute",
            "arg": "STRATEGY",
            "type": "enum",
            "desc": "Execute the file using specific settings. This is the default using the precompiled setting. Options are as following:",
            "values": [
              {
                "values": ["ref", "reference"],
                "desc": "Use a simple reference interpreter that falls back onto a bignum based interpreter."
              },
              {
                "values": ["opt", "optimized"],
                "desc": "Use the reference interpreter with optimized data structures."
              },
              {
                "values": ["big", "bigint"],
                "desc": "Use the bignum based fallback interpreter directly. This is the slowest option."
              },
              {
                "values": ["aot", "precompiled"],
                "desc": "Compile the program into native code in advance, and then execute it using optimized datastructures. This is the fastest for short programs, or programs that have a long execution time. It falls back to the optimized interpreter and bignum interpreter when the native code encounters errors.},"
              },
              {
                "values": ["sync", "synchronous"],
                "desc": "Similar to precompiled, but this implementation compiles code it encounters while interpreting. This is faster for large programs that only actually execute a small part of their code."
              },
              {
                "values": ["async", "threaded"],
                "desc": "Similar to precompiled, but compiles code in a separate thread while already interpreting. It is faster on large programs."
              }
            ]
          },
          {
            "short": "c",
            "long": "count",
            "desc": "Use the reference interpreter with no bignum fallback to count the amount of instructions executed."
          },
          {
            "short": "t",
            "long": "translate",
            "desc": "Instead of executing, translate the file to/from assembly, and write the result to the specified output."
          },
          {
            "short": "m",
            "long": "minify",
            "desc": "When translating, minify the resulting code by crushing label size."
          },
          {
            "short": "d",
            "long": "dump",
            "arg": "DUMPFILE",
            "type": "string",
            "desc": "Just compiles the program into assembly and dumps the result into a file. This is mainly for debugging."
          },
          { "short": "p", "long": "perf", "desc": "Prints performance information to stdout." },
          {
            "long": "ignore-overflow",
            "desc": "Use wrapping arithmetic instead of switching to bignum-based interpretation when overflow occurs."
          },
          {
            "long": "unchecked-heap",
            "desc": "By default the interpreter generates an error when a missing key is requested from the heap. As the behaviour of the reference implementation of this is somewhat inconsistent, this option configures the interpreter to return 0 instead."
          },
          {
            "long": "no-fallback",
            "desc": "On overflow, generate an error instead of switching to a bignum interpreter."
          },
          {
            "long": "no-implicit-exit",
            "desc": "By default, the compiler exits cleanly if the end of the program is reached, even when no exit command is present. This flag disables this behaviour."
          }
        ],
        "option_parse": "manual"
      }
    ]
  },
  {
    "name": "whitespace",
    "path": "c/bvisness",
    "authors": ["Ben Visness"],
    "license": "none",
    "languages": ["C", "Yacc", "TextMate"],
    "tags": ["interpreter", "syntax highlighting"],
    "date": "2016-05-20 22:49:38 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/bvisness/whitespace"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "make",
        "usage": "$0 [<file>]",
        "notes": "Reads from stdin, if no file is given"
      }
    ]
  },
  {
    "name": "Abyad",
    "path": "python/kareeeeem-abyad",
    "authors": ["Mohammed Kareem"],
    "license": "Unlicense",
    "languages": ["Python"],
    "tags": ["interpreter", "program builder", "programs"],
    "date": "2016-05-13 12:50:00 +0200",
    "spec_version": "0.2",
    "source": ["https://github.com/Kareeeeem/abyad"],
    "commands": [
      { "type": "interpreter", "bin": "src/__main__.py", "usage": "python2.7 $0 <file>" },
      {
        "type": "program builder",
        "bin": "generate_programs",
        "usage": "python2.7 $0",
        "notes": "Generates programs in tests/ from definitions in tests/programs.py"
      }
    ]
  },
  {
    "name": "Rust-Whitespace",
    "path": "rust/jayshua",
    "authors": ["Jayshua Nelson"],
    "license": "none",
    "languages": ["Rust"],
    "tags": ["interpreter"],
    "date": "2016-05-08 16:05:03 -0700",
    "spec_version": "0.2",
    "source": ["https://github.com/Jayshua/rust-whitespace"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "target/release/whitespace",
        "build": "cargo build --release",
        "usage": "$0 [list] <file>",
        "subcommands": [
          { "name": "run", "desc": "(default) run the program" },
          { "name": "list", "desc": "list the commands that the file contains" }
        ]
      }
    ]
  },
  {
    "name": "whitespace-interpreter",
    "path": "javascript/kanra1412",
    "authors": ["kanra1412"],
    "license": "none",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2016-04-29 21:05:24 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/kanra1412/whitespace-interpreter"]
  },
  {
    "name": "whitespace-compiler",
    "path": "python/meand",
    "authors": ["Adam Dinwoodie"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["assembler"],
    "date": "2016-04-13 13:40:50 +0100",
    "spec_version": "0.2",
    "source": ["https://github.com/me-and/whitespace-compiler"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUPE"],
        "swap": ["SWAP"],
        "drop": ["DROP"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRV"],
        "label": ["LABEL"],
        "call": ["GOSUB"],
        "jmp": ["JMP"],
        "jz": ["JEZ"],
        "jn": ["JLZ"],
        "ret": ["RETURN"],
        "end": ["END"],
        "printc": ["PUTC"],
        "printi": ["PUTN"],
        "readc": ["GETC"],
        "readi": ["GETN"]
      }
    }
  },
  {
    "name": "Whitespace-JS",
    "path": "javascript/susisu",
    "authors": ["Susisu"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2016-04-12 15:01:22 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/susisu/Whitespace-JS"]
  },
  {
    "name": "whitespace-ruby",
    "path": "ruby/alesiong",
    "authors": ["alesiong"],
    "license": "GPL-2.0-or-later",
    "languages": ["Ruby"],
    "tags": ["interpreter", "disassembler", "programs"],
    "date": "2016-03-05 16:39:05 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/alesiong/whitespace-ruby"],
    "notes": "Forked from Wayne Conrad's Ruby programs"
  },
  {
    "name": "Whitespace support in Atom",
    "path": "textmate/veniversum",
    "authors": ["Qingzhuo"],
    "license": "MIT",
    "languages": ["TextMate"],
    "tags": ["syntax highlighting"],
    "date": "2016-02-20 16:31:58 +0000",
    "spec_version": "-",
    "source": ["https://github.com/veniversum/language-whitespace"]
  },
  {
    "name": "whitespace-interpreter",
    "path": "javascript/uraza",
    "authors": ["Uraza"],
    "license": "none",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2016-02-08 10:12:54 +0100",
    "spec_version": "0.2",
    "source": ["https://github.com/uraza/whitespace-interpreter"],
    "notes": "Codewars solution"
  },
  {
    "name": "WHINT",
    "path": "cpp/abac-whint",
    "authors": ["Adam Bac"],
    "license": "GPL-2.0-or-later",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2015-12-31 17:35:38 +0100",
    "spec_version": "0.2",
    "source": ["https://github.com/abac00s/WHINT"],
    "bounds": { "precision": "fixed" },
    "commands": [
      {
        "type": "interpreter",
        "bin": "whint",
        "build": "g++ -O3 -Wall -o whint whint.cpp",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "Whitespacing",
    "path": "scala/ojha-whitespacing",
    "authors": ["Alexandra Ojha"],
    "license": "none",
    "languages": ["Scala"],
    "tags": ["interpreter"],
    "date": "2015-12-11 15:56:06 +0000",
    "spec_version": "0.2",
    "source": ["https://github.com/polyglotpiglet/Whitespacing"]
  },
  {
    "name": "callisto",
    "path": "lua/vyo-callisto",
    "authors": ["Manu Weidmann"],
    "license": "none",
    "languages": ["Lua"],
    "tags": ["interpreter"],
    "date": "2015-10-15 20:40:19 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/vyo/callisto"]
  },
  {
    "name": "Whitespace",
    "path": "python/dalleng",
    "authors": ["Diego Allen"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2015-09-28 12:31:30 -0400",
    "spec_version": "0.3",
    "source": ["https://github.com/dalleng/Whitespace"]
  },
  {
    "name": "Whitespace",
    "path": "javascript/therebelrobot",
    "authors": ["Aster Haven"],
    "license": "ISC",
    "languages": ["JavaScript"],
    "tags": ["mapping"],
    "date": "2015-09-09 08:16:43 -0700",
    "spec_version": "-",
    "source": ["https://github.com/therebelrobot/whitespace"],
    "mappings": [{ "space": "s", "tab": "t", "lf": "n", "spaces_between": false }],
    "notes": "Identical to Codewars template"
  },
  {
    "name": "whitespacer",
    "path": "javascript/macocha-whitespacer",
    "authors": ["Maciej Siwek"],
    "license": "MIT",
    "languages": ["JavaScript/React"],
    "tags": ["IDE", "interpreter", "disassembler"],
    "date": "2015-09-04 14:22:57 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/macocha/whitespacer"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUPL"],
        "copy": ["COPY"],
        "swap": ["SWP"],
        "drop": ["DISC"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["GET"],
        "label": ["LABEL"],
        "call": ["CALL"],
        "jmp": ["JMP"],
        "jz": ["JEZ"],
        "jn": ["JLZ"],
        "ret": ["RET"],
        "end": ["EXIT"],
        "printc": ["OUTC"],
        "printi": ["OUTN"],
        "readc": ["INPC"],
        "readi": ["INPN"]
      }
    },
    "notes": "Assembly is only displayed, not disassembled"
  },
  {
    "name": "Whitespace",
    "path": "c/rdebath",
    "authors": ["Robert de Bath"],
    "license": "none",
    "languages": ["C", "Lex"],
    "tags": ["transpiler", "interpreter", "assembler", "programs"],
    "date": "2015-08-18 14:25:03 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/rdebath/whitespace"],
    "whitespace": {
      "nonstandard": [
        { "name": "jzp", "args": ["label"] },
        { "name": "jzn", "args": ["label"] },
        { "name": "jp", "args": ["label"] },
        { "name": "jnz", "args": ["label"] },
        { "name": "ifoption" },
        { "name": "endoption" },
        { "name": "include" }
      ]
    },
    "assembly": {
      "instructions": {
        "push": ["ws_push(<number>);", "push"],
        "dup": ["ws_dup();", "dup", "doub"],
        "copy": ["ws_pick(<number>);", "copy", "pick"],
        "swap": ["ws_swap();", "swap"],
        "drop": ["ws_drop();", "drop", "discard", "pop"],
        "slide": ["ws_slide(<number>);", "slide"],
        "add": ["ws_add();", "add"],
        "sub": ["ws_sub();", "sub"],
        "mul": ["ws_mul();", "mul"],
        "div": ["ws_div();", "div"],
        "mod": ["ws_mod();", "mod"],
        "store": ["ws_store();", "store"],
        "retrieve": ["ws_fetch();", "ws_retrieve();", "fetch", "retrieve", "retrive", "retreive"],
        "label": ["ws_label(<label>);", "<number>:", ".<label>:", "<label>:", "label"],
        "call": ["ws_call(<label>);", "call"],
        "jmp": ["ws_jump(<label>);", "jmp", "jump"],
        "jz": ["ws_jz(<label>);", "jz", "jumpz"],
        "jn": ["ws_jn(<label>);", "jn", "jumpn"],
        "ret": ["ws_return();", "ret", "return"],
        "end": ["ws_exit();", "quit", "exit", "end"],
        "printc": ["ws_outc();", "outc", "outchar", "printc"],
        "printi": ["ws_outn();", "outn", "outnum", "printi"],
        "readc": ["ws_readc();", "readc", "readchar", "inc"],
        "readi": ["ws_readn();", "readn", "readnum", "readi", "inn"],
        "dumpstack": ["debug_printstack();"],
        "dumpheap": ["debug_printheap();"]
      },
      "case_sensitive_instructions": false
    },
    "commands": [
      {
        "type": "transpiler",
        "bin": "ws2c",
        "build": "make",
        "usage": "$0 [-r | -c] [-v...] [-q] [-e | -z | -n] [-d] [-old] [--] [<file>]",
        "options": [
          { "short": "r", "desc": "Interpret now" },
          { "short": "c", "desc": "Compile to C" },
          { "short": "v", "desc": "Print a single comment line; repeat to print more lines" },
          { "short": "q", "desc": "Disable warnings" },
          { "short": "e", "desc": "-1 on EOF (not implemented)" },
          { "short": "z", "desc": "0 on EOF (not implemented)" },
          { "short": "n", "desc": "1 on EOF (not implemented)" },
          { "short": "d", "desc": "Debug mode" },
          { "short": "old", "desc": "Disable Whitespace 0.3 features" }
        ],
        "option_parse": "manual",
        "notes": "Interprets program when no flags given. Reconstructs ASCII label strings of the form that were of the form [A-Za-z_][A-Za-z0-9_]* from numbers."
      },
      {
        "type": "interpreter",
        "bin": "wsc.sh",
        "usage": "$0 <file> [<CFLAGS> [<LDFLAGS>]]",
        "output": "stdout",
        "notes": "Compiles and runs program"
      },
      {
        "type": "assembler",
        "bin": "wsa",
        "dependencies": ["Flex"],
        "build": "make",
        "usage": "$0 [<file>...]",
        "output": "stdout",
        "notes": "Assembles other Whitespace assembly dialects"
      },
      {
        "type": "assembler",
        "bin": "wsa.sed",
        "dependencies": ["GNU sed"],
        "usage": "sed -f $0 <file>",
        "output": "stdout",
        "notes": "Assembles Oliver Burghard's Whitespace assembly dialect, including shorthand instructions"
      }
    ],
    "notes": "Transpiles to C. The input assembly dialects of wsa and wsa.sed, as well as the output C function calls, are combined in .assembly.instructions. Has tests directory contains Whitespace programs from many authors."
  },
  {
    "name": "BlueSpace",
    "path": "python/smithers-bluespace",
    "authors": ["Christopher Smith"],
    "license": "X11",
    "languages": ["Python"],
    "tags": ["interpreter", "compiler", "assembler", "optimizer", "mapping", "programs"],
    "date": "2015-08-13 20:46:55 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/Smithers888/BlueSpace", "https://cpjsmith.uk/whitespace"],
    "assembly": {
      "instructions": {
        "push": ["Push"],
        "dup": ["Duplicate"],
        "copy": ["Copy"],
        "swap": ["Swap"],
        "drop": ["Discard"],
        "slide": ["Slide"],
        "add": ["Add"],
        "sub": ["Subtract"],
        "mul": ["Multiply"],
        "div": ["Divide"],
        "mod": ["Modulo"],
        "store": ["Store"],
        "retrieve": ["Retrieve"],
        "label": ["Label"],
        "call": ["Call"],
        "jmp": ["Jump"],
        "jz": ["JumpZero"],
        "jn": ["JumpNegative"],
        "ret": ["Return"],
        "end": ["End"],
        "printc": ["OutputChar"],
        "printi": ["OutputNum"],
        "readc": ["ReadChar"],
        "readi": ["ReadNum"]
      },
      "case_sensitive_instructions": false,
      "line_comment_prefix": "#",
      "extension": "wsa"
    },
    "mappings": [{ "space": "s", "tab": "t", "lf": "n", "extension": "wsp" }],
    "notes": "Mapping has spaces between opcode and param and each instruction is on a separate line. Assembly string parameters are written with s/t/l"
  },
  {
    "name": "Cupertino-WhiteSpace-Interperter",
    "path": "cpp/frmsaul-cupertino",
    "authors": ["Saul Fuhrmann"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2015-05-22 21:54:51 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/frmsaul/Cupertino-WhiteSpace-Interperter"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "g++ -O3 -o whitespace src/*.cpp",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "whitespace",
    "path": "python/mcolom",
    "authors": ["Miguel Colom"],
    "license": "GPL-3.0-or-later",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2015-05-18 18:10:03 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/mcolom/whitespace"]
  },
  {
    "name": "ws_interpreter",
    "path": "java/kmizu",
    "authors": ["Kota Mizushima"],
    "license": "MIT",
    "languages": ["Java"],
    "tags": ["interpreter"],
    "date": "2015-05-13 02:13:01 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/kmizu/ws_interpreter"]
  },
  {
    "name": "Whitespace compiler targeting JVM bytecode",
    "authors": ["Bruno Kim Medeiros Cesar"],
    "license": "unknown",
    "languages": ["JVM"],
    "tags": ["compiler"],
    "date": "2015-04-03 06:30:42 +0000",
    "spec_version": "unknown",
    "source": [
      "https://stackoverflow.com/questions/29427419/ifeq-ifne-jvm-opcode-always-branches",
      "https://drive.google.com/drive/folders/0B8vCNP4j9pRKfmpOT2dGeWRTN0lrbFlPS0xMRENlSWJPMW44TVZDM0hWMVJJUGZQZC1NcGM"
    ]
  },
  {
    "name": "I C Whitespace",
    "path": "c/strangepan-i-c-whitespace",
    "authors": ["Dan Andrus"],
    "license": "GPL-2.0-or-later",
    "languages": ["C"],
    "tags": ["interpreter"],
    "date": "2015-03-10 01:25:16 -0600",
    "spec_version": "0.3",
    "source": ["https://github.com/StrangePan/I_C_Whitespace"],
    "bounds": {
      "precision": "C int",
      "stack_cap": 1028,
      "call_stack_cap": 512,
      "heap_min": 0,
      "heap_max": "unbounded",
      "heap_cap": 1024,
      "label_cap": 512,
      "instruction_cap": "unbounded"
    },
    "commands": [{ "type": "interpreter", "bin": "whitespace", "build": "make", "usage": "$0 <file>" }]
  },
  {
    "name": "whitespace-translater",
    "path": "javascript/kmyk-translater",
    "authors": ["Kimiyuki Onaka"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["assembler", "disassembler", "mapping"],
    "date": "2015-03-01 21:07:23 +0900",
    "spec_version": "0.3",
    "source": [
      "https://github.com/kmyk/whitespace-translater",
      "https://web.archive.org/web/20160307155202/http://solorab.net/works/whitespace-translater/"
    ],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPYNTH"],
        "swap": ["SWAP"],
        "drop": ["DISCARD"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MULT"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["LABEL"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JUMPZERO"],
        "jn": ["JUMPNEG"],
        "ret": ["RETURN"],
        "end": ["EXIT"],
        "printc": ["PUTCHAR"],
        "printi": ["PUTNUM"],
        "readc": ["GETCHAR"],
        "readi": ["GETNUM"]
      },
      "case_sensitive_instructions": true,
      "line_comment_prefix": "#"
    },
    "mappings": [{ "space": "S", "tab": "T", "lf": "\n" }]
  },
  {
    "name": "Tomato Programming Language",
    "path": "haskell/brainbrush-tomato",
    "authors": ["brainbrush"],
    "license": "GPL-2.0-or-later",
    "languages": ["Haskell"],
    "tags": ["interpreter", "mapping", "programs"],
    "date": "2015-02-26 20:31:40 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/brainbush/Tomato-Programming-Language"],
    "mappings": [{ "space": "番", "tab": "茄", "lf": "干" }],
    "commands": [
      {
        "type": "interpreter",
        "bin": "wspace",
        "build": "make",
        "build_errors": "Needs changes for latest Haskell",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "whitespace",
    "path": "go/kinu",
    "authors": ["Kinuko Yasuda"],
    "license": "none",
    "languages": ["Go"],
    "tags": ["interpreter", "disassembler"],
    "date": "2015-02-19 00:54:08 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/kinu/whitespace"],
    "bounds": {
      "precision": "Go int",
      "stack_cap": 20,
      "call_stack_cap": 20,
      "heap_min": 0,
      "heap_max": "unbounded",
      "heap_cap": "unbounded",
      "label_cap": "unbounded",
      "instruction_cap": "unbounded"
    },
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["DISCARD"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JMP"],
        "jz": ["JMP_IF0"],
        "jn": ["JMP_NEG"],
        "ret": ["RET"],
        "end": ["FINISH"],
        "printc": ["PUTCHAR"],
        "printi": ["PUTNUM"],
        "readc": ["READCHAR"],
        "readi": ["READNUM"]
      }
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "go mod init github.com/kinu/whitespace && go build",
        "usage": "$0 [-v] [--dry_run] [-h | --help] <file>",
        "options": [
          { "short": "v", "long": "v", "desc": "verbose" },
          { "short": "dry_run", "long": "dry_run", "desc": "dry run" },
          { "short": "h", "long": "h" },
          { "short": "help", "long": "help" }
        ],
        "option_parse": "Go flag"
      }
    ]
  },
  {
    "name": "whitespace-clj",
    "path": "clojure/tsuyusato",
    "authors": ["TSUYUSATO Kitsune"],
    "license": "EPL-1.0",
    "languages": ["Clojure"],
    "tags": ["interpreter"],
    "date": "2015-02-11 15:15:52 +0900",
    "spec_version": "0.2",
    "source": ["https://github.com/MakeNowJust/whitespace-clj"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "target/whitespace-clj-0.1.0-SNAPSHOT-standalone.jar",
        "dependencies": ["Leiningen"],
        "build": "lein uberjar",
        "usage": "java -jar $0 [-h | --help] [-v | --version] [-c | --chars] [-t | --text] [-l | --lisp] [-s | --sexp] [--time] <file>",
        "options": [
          { "short": "h", "long": "help", "desc": "show this help" },
          { "short": "v", "long": "version", "desc": "show version" },
          { "short": "c", "long": "chars", "desc": "show source code as visible characters" },
          { "short": "t", "long": "text", "desc": "show source code as assembled text" },
          { "short": "l", "long": "lisp", "desc": "compile to Clojure code and run" },
          { "short": "s", "long": "sexp", "desc": "compile to Clojure code and show" },
          { "long": "time", "desc": "show executing time" }
        ],
        "option_parse": "clojure.tools.cli"
      }
    ]
  },
  {
    "name": "whitespace-php",
    "path": "php/nobody1986",
    "authors": ["nobody1986"],
    "license": "none",
    "languages": ["PHP", "C"],
    "tags": ["interpreter", "disassembler", "programs"],
    "date": "2015-02-04 17:15:42 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/nobody1986/whitespace-php"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["COPY"],
        "copy": ["COPYN"],
        "swap": ["EXCHANGE"],
        "drop": ["DROP"],
        "slide": ["SLIDEOFF"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["READ"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JUMPNULL"],
        "jn": ["JUMPDE"],
        "ret": ["ENDFUNC"],
        "end": ["ENDLE"],
        "printc": ["OUTCHAR"],
        "printi": ["OUTNUM"],
        "readc": ["INCHAR"],
        "readi": ["INNUM"]
      }
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace.php",
        "usage": "php $0 <file>",
        "notes": "`compile2File` function, if uncommented, can disassembly to file"
      },
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "gcc -O3 -o whitespace whitespace.c list.c stack.c",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "whiteSpaceInterpreter",
    "path": "java/faurehu",
    "authors": ["Matias Faure"],
    "license": "none",
    "languages": ["Java"],
    "tags": ["interpreter", "programs"],
    "date": "2015-01-29 00:49:03 +0000",
    "spec_version": "0.3",
    "source": ["https://github.com/faurehu/whiteSpaceInterpreter"]
  },
  {
    "name": "Whitespace-Interpreter--C-",
    "path": "cpp/sudheesh",
    "authors": ["sudheesh4"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2014-12-02 05:59:27 +0530",
    "spec_version": "0.2",
    "source": ["https://github.com/sudheesh4/Whitespace-Interpreter-C-"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "space",
        "build": "g++ -O3 -o space space.cpp",
        "usage": "$0 < <file>"
      }
    ]
  },
  {
    "name": "WhiteSpaceInterpreter",
    "path": "csharp/reflash",
    "authors": ["reflash"],
    "license": "none",
    "languages": ["C#"],
    "tags": ["interpreter"],
    "date": "2014-11-21 13:18:03 +0300",
    "spec_version": "0.3",
    "source": ["https://github.com/reflash-blog/WhiteSpaceInterpreter"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "WhiteSpaceInterpretator/bin/Debug/WhiteSpaceInterpretator.exe",
        "build": "msbuild /p:Configuration=Debug WhiteSpaceInterpretator/WhiteSpaceInterpretator.csproj",
        "build_errors": "Could not locate the assemblies `PresentationCore` or `PresentationFramework`"
      }
    ]
  },
  {
    "name": "Whitespace",
    "path": "c/koturn",
    "authors": ["koturn"],
    "license": "MIT",
    "languages": ["C"],
    "tags": ["interpreter", "translator", "programs"],
    "date": "2014-11-08 22:30:57 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/koturn/Whitespace"],
    "commands": [
      {
        "bin": "whitespace.out",
        "build": "make",
        "usage": "$0 [-b | --bytecode] [-f | --filter] [-h | --help] [-m | --mnemonic] [-o <file> | --output=<file>] [-t | --translate] <file>",
        "options": [
          { "short": "b", "long": "bytecode", "desc": "Show code in hexadecimal" },
          { "short": "f", "long": "filter", "desc": "Visualize whitespace source code" },
          { "short": "h", "long": "help", "desc": "Show help and exit" },
          { "short": "m", "long": "mnemonic", "desc": "Show byte code in mnemonic format" },
          {
            "short": "o",
            "long": "output",
            "arg": "file",
            "arg_required": true,
            "type": "string",
            "desc": "Specify output filename"
          },
          { "short": "t", "long": "translate", "desc": "Translate Whitespace to C source code" }
        ],
        "option_parse": "getopt"
      }
    ]
  },
  {
    "name": "whitespace.php",
    "path": "php/johankj",
    "authors": ["Johan K. Jensen"],
    "license": "MIT",
    "languages": ["PHP"],
    "tags": ["interpreter", "programs"],
    "date": "2014-11-01 16:50:34 +0100",
    "spec_version": "0.2",
    "source": ["https://github.com/johankj/whitespace-interpreter-php"],
    "commands": [{ "type": "interpreter", "bin": "whitespace.php", "usage": "php whitespace.php <file>" }]
  },
  {
    "name": "wsm",
    "path": "php/igorw-wsm",
    "authors": ["Igor Wiedler"],
    "license": "none",
    "languages": ["PHP"],
    "tags": ["assembler", "programs"],
    "date": "2014-09-27 22:24:38 +0200",
    "spec_version": "0.2",
    "source": ["https://github.com/igorw/wsm"],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["ref"],
        "swap": ["swap"],
        "drop": ["discard"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["label"],
        "call": ["call"],
        "jmp": ["jump"],
        "jz": ["jumpz"],
        "jn": ["jumplz"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["write_char"],
        "printi": ["write_num"],
        "readc": ["read_char"],
        "readi": ["read_num"]
      },
      "extension": "wsm"
    },
    "commands": [{ "type": "assembler", "bin": "bin/wsm", "usage": "php $0 <file>" }]
  },
  {
    "name": "PYWS",
    "path": "python/eizoassik-pyws",
    "authors": ["Eizo Assik"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["interpreter", "assembler", "disassembler", "mapping"],
    "date": "2014-08-28 10:18:04 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/EizoAssik/pyws"],
    "whitespace": {
      "nonstandard": [{ "name": "PYFN", "seq": "LLS", "args": ["label"] }, { "name": "PUSHS", "args": ["string"] }]
    },
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["POP"],
        "slide": ["SKIP"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JZ"],
        "jn": ["JS"],
        "ret": ["RET"],
        "end": ["END"],
        "printc": ["PCHR"],
        "printi": ["PNUM"],
        "readc": ["RCHR"],
        "readi": ["RNUM"]
      },
      "line_comment_prefix": "#"
    },
    "mappings": [
      { "space": "S", "tab": "T", "lf": "L", "spaces_between": false },
      { "space": "草", "tab": "泥", "lf": "马", "spaces_between": false }
    ],
    "commands": [
      {
        "bin": "pyws.py",
        "dependencies": ["Python 3"],
        "usage": "python3 $0 [-h | --help] [-A] [--IR] [--strict] [--style <style>] [--sep <sep>] [--arg-sep <arg_sep>] [--debug] [--traceall] $0 <file>",
        "options": [
          { "short": "h", "long": "help", "desc": "show this help message and exit" },
          { "short": "A", "desc": "use assembler instead of compiler" },
          { "long": "IR", "desc": "compile to WSIR instead of running it" },
          { "long": "strict", "desc": "use strict mode" },
          {
            "long": "style",
            "arg": "STYLE",
            "type": "enum",
            "default": "ORIGIN",
            "desc": "code style",
            "values": [
              { "values": ["ORIGIN"], "desc": "use space/tab/lf" },
              { "values": ["STL"], "desc": "use S/T/L instead space/tab/lf" },
              { "values": ["GMH"], "desc": "use 草/泥/马 instead of space/tab/lf" }
            ]
          },
          {
            "long": "sep",
            "arg": "SEP",
            "type": "string",
            "default": ";",
            "desc": "separator for assembled code between operators"
          },
          {
            "long": "arg-sep",
            "arg": "ARG_SEP",
            "type": "string",
            "default": ";",
            "desc": "separator for assembled code between arguments"
          },
          { "long": "debug", "desc": "run with debug mode" },
          { "long": "traceall", "desc": "store heap and stack after EACH operator" }
        ],
        "option_parse": "Python argparse"
      }
    ]
  },
  {
    "name": "Albino",
    "path": "rust/faultier-albino",
    "authors": ["Taro Sako"],
    "license": "MIT",
    "languages": ["Rust"],
    "tags": ["interpreter", "assembler", "disassembler", "bytecode", "Brainfuck to Whitespace"],
    "date": "2014-07-18 09:13:55 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/faultier/albino"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["DISCARD"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JUMPZ"],
        "jn": ["JUMPN"],
        "ret": ["RETURN"],
        "end": ["EXIT"],
        "printc": ["PUTC"],
        "printi": ["PUTN"],
        "readc": ["GETC"],
        "readi": ["GETN"]
      }
    },
    "commands": [
      {
        "bin": "albino",
        "build": "cargo build --release",
        "build_errors": "Needs many changes for latest Rust",
        "option_parse": "manual"
      },
      {
        "bin": "albino-run",
        "build": "cargo build --release",
        "build_errors": "Needs many changes for latest Rust",
        "option_parse": "manual"
      },
      {
        "bin": "albino-build",
        "build": "cargo build --release",
        "build_errors": "Needs many changes for latest Rust",
        "option_parse": "manual"
      },
      {
        "bin": "albino-exec",
        "build": "cargo build --release",
        "build_errors": "Needs many changes for latest Rust",
        "option_parse": "manual"
      },
      {
        "bin": "albino-gen",
        "build": "cargo build --release",
        "build_errors": "Needs many changes for latest Rust",
        "option_parse": "manual"
      }
    ],
    "notes": "Uses faultier/whitebase. TODO document options."
  },
  {
    "name": "Whitespace-LLVM",
    "path": "cpp/subv-whitespace-llvm",
    "authors": ["Sebastian Valle"],
    "license": "GPL-3.0-or-later",
    "languages": ["C++", "LLVM"],
    "tags": ["interpreter"],
    "date": "2014-07-16 08:48:25 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/Subv/Whitespace-LLVM"],
    "commands": [
      {
        "type": "compiler",
        "bin": "bin/Whitespace-LLVM",
        "dependencies": ["LLVM"],
        "build_errors": "Requires LLVM",
        "usage": "$0",
        "notes": "Filename is hardcoded to ./count.ws"
      }
    ]
  },
  {
    "name": "Whitebase",
    "path": "rust/faultier-whitebase",
    "authors": ["Taro Sako"],
    "license": "MIT",
    "languages": ["Rust"],
    "tags": ["interpreter", "assembler", "disassembler", "bytecode", "Brainfuck to Whitespace", "library"],
    "date": "2014-07-15 22:27:17 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/faultier/whitebase"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["DISCARD"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JUMPZ"],
        "jn": ["JUMPN"],
        "ret": ["RETURN"],
        "end": ["EXIT"],
        "printc": ["PUTC"],
        "printi": ["PUTN"],
        "readc": ["GETC"],
        "readi": ["GETN"]
      },
      "usage": ["debug"]
    },
    "commands": [{ "build": "cargo build --release", "build_errors": "Needs many changes for latest Rust" }]
  },
  {
    "name": "whitespace-interpreter",
    "path": "java/azige",
    "authors": ["Azige"],
    "license": "Apache-2.0",
    "languages": ["Java"],
    "tags": ["language", "interpreter"],
    "date": "2014-06-18 23:38:41 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/azige/whitespace-interpreter"]
  },
  {
    "name": "whitespace-php",
    "path": "php/igorw",
    "authors": ["Igor Wiedler"],
    "license": "MIT",
    "languages": ["PHP"],
    "tags": ["interpreter"],
    "date": "2014-06-10 00:59:21 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/igorw/whitespace-php"],
    "commands": [{ "type": "interpreter", "bin": "bin/interpreter", "usage": "php $0 <file>" }]
  },
  {
    "name": "wsint",
    "path": "masm/jarsp-wsint",
    "authors": ["jarsp"],
    "license": "none",
    "languages": ["MASM"],
    "tags": ["interpreter"],
    "date": "2014-06-01 19:15:40 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/jarsp/wsint"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "wsint",
        "build_errors": "Requires Visual Studio",
        "usage": "$0",
        "notes": "Filename is hardcoded to ./script.ws"
      }
    ]
  },
  {
    "name": "white",
    "path": "cpp/keirua-white",
    "authors": ["Keirua"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter", "disassembler"],
    "date": "2014-05-30 23:51:59 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/Keirua/whitespace"],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["discard"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["setlabel"],
        "call": ["call_subroutine"],
        "jmp": ["jump"],
        "jz": ["jzero"],
        "jn": ["jneg"],
        "ret": ["endofsubroutine"],
        "end": ["endofprogram"],
        "printc": ["print_c"],
        "printi": ["print_i"],
        "readc": ["read_c"],
        "readi": ["read_i"]
      }
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "white",
        "build": "g++ -O3 -Wall -o white main.cpp",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "Kairos",
    "path": "java/vyo-kairos",
    "authors": ["Manu Weidmann"],
    "license": "MIT",
    "languages": ["Java"],
    "tags": ["interpreter", "assembler", "arbitrary precision", "programs"],
    "date": "2014-05-10 06:51:25 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/vyo/kairos"],
    "notes": "Has ElGamal encryption and decryption written Whitespace assembly"
  },
  {
    "name": "elixir-whitespace",
    "path": "elixir/quinnwilton",
    "authors": ["Quinn Wilton"],
    "license": "none",
    "languages": ["Elixir"],
    "tags": ["interpreter"],
    "date": "2014-03-07 17:08:19 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/QuinnWilton/elixir-whitespace"]
  },
  {
    "name": "whitespace-coder",
    "path": "java/praveenvaka-coder",
    "authors": ["Praveen Reddy Vaka"],
    "license": "none",
    "languages": ["Java"],
    "tags": ["program builder"],
    "date": "2014-03-07 05:39:21 -0800",
    "spec_version": "0.2",
    "source": ["https://github.com/praveenvaka/whitespace-coder"]
  },
  {
    "name": "SaTaN",
    "path": "c/threeifbywhiskey-satan",
    "authors": ["Dorien Snake"],
    "license": "none",
    "languages": ["C"],
    "tags": ["interpreter"],
    "date": "2014-03-03 16:03:49 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/threeifbywhiskey/satan"],
    "bounds": {
      "precision": "C int",
      "stack_cap": "unbounded",
      "call_stack_cap": "unbounded",
      "heap_min": "unbounded",
      "heap_max": "unbounded",
      "heap_cap": "unbounded",
      "label_cap": "unbounded",
      "instruction_cap": "unbounded"
    },
    "commands": [{ "type": "interpreter", "bin": "satan", "build": "make", "usage": "$0 <file>" }]
  },
  {
    "name": "Whitespace Covert Channel",
    "path": "php/jseidl-wcc",
    "authors": ["Jan Seidl"],
    "license": "none",
    "languages": ["PHP"],
    "tags": ["text to Whitespace", "web service"],
    "date": "2014-02-18 17:13:16 -0300",
    "spec_version": "0.2",
    "source": ["https://github.com/jseidl/whitespace"],
    "notes": "HTTP service that converts text to a sequence of push and printc instructions that produce the same text"
  },
  {
    "name": "python-whitespace",
    "path": "python/mikecat",
    "authors": ["みけCAT (MikeCAT)"],
    "license": "Zlib",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2014-02-16 11:04:37 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/mikecat/python-whitespace"],
    "commands": [{ "type": "interpreter", "bin": "whitespace.py", "usage": "python $0 <file>" }]
  },
  {
    "name": "wspacego",
    "path": "go/yshr-wspacego",
    "authors": ["Yosihiro Isago"],
    "license": "Apache-2.0",
    "languages": ["Go"],
    "tags": ["interpreter", "disassembler", "mapping"],
    "date": "2013-12-27 19:29:40 -0800",
    "spec_version": "0.3",
    "source": ["https://github.com/135yshr/wspacego", "https://gitlab.com/yshr135/wspacego"],
    "bounds": {
      "precision": "fixed",
      "stack_cap": "unbounded",
      "call_stack_cap": "unbounded",
      "heap_min": "unbounded",
      "heap_max": "unbounded",
      "heap_cap": "unbounded",
      "label_cap": "unbounded",
      "instruction_cap": "unbounded"
    },
    "mappings": [{ "space": "S", "tab": "T", "lf": "\n", "spaces_between": false }],
    "commands": [
      {
        "type": "interpreter",
        "bin": "wspacego",
        "build": "go mod init github.com/135yshr/wspacego && go mod tidy && go build",
        "usage": "$0 [-h | --help] [run | disasm | char] <file>",
        "options": [
          { "short": "h", "long": "h", "desc": "display this help and exit" },
          { "short": "help", "long": "help", "desc": "display this help and exit" }
        ],
        "option_parse": "Go flag",
        "subcommands": [
          { "name": "run", "desc": "run the program" },
          { "name": "disasm", "desc": "disassemble the program" },
          { "name": "char", "desc": "convert the program (space -> S, Tab -> T)" }
        ]
      }
    ],
    "notes": "copy uses top of stack, not argument"
  },
  {
    "name": "wvm",
    "path": "python/apua-wvm",
    "authors": ["Apua"],
    "license": "none",
    "languages": ["Python"],
    "tags": ["interpreter", "programs"],
    "date": "2013-11-24 15:06:57 +0800",
    "spec_version": "0.3",
    "source": ["https://github.com/apua/whitespace"]
  },
  {
    "name": "wseditor",
    "path": "java/yuukiaria-wseditor",
    "authors": ["YuukiARIA"],
    "license": "none",
    "languages": ["Java"],
    "tags": ["IDE"],
    "date": "2013-11-21 22:29:13 -0800",
    "spec_version": "-",
    "source": ["https://github.com/YuukiARIA/wseditor"]
  },
  {
    "name": "whitespace-llvm",
    "path": "cpp/tycho-whitespace-llvm",
    "authors": ["Tycho Bickerstaff"],
    "license": "GPL-2.0-or-later",
    "languages": ["C++", "LLVM"],
    "tags": ["compiler", "JIT", "optimizer", "programs"],
    "date": "2013-08-31 19:34:35 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/worktycho/whitespace-llvm"],
    "bounds": { "precision": "arbitrary" },
    "commands": [
      {
        "type": "compiler",
        "bin": "wspace-jit",
        "dependencies": ["LLVM"],
        "build": "make",
        "build_errors": "Requires LLVM",
        "usage": "$0 [--list-instructions] <file>",
        "options": [{ "long": "list-instructions" }],
        "option_parse": "manual"
      }
    ]
  },
  {
    "name": "Whitespace-JS",
    "path": "coffeescript/ehrlichbryan",
    "authors": ["Bryan Ehrlich"],
    "license": "none",
    "languages": ["CoffeeScript"],
    "tags": ["interpreter", "assembler"],
    "date": "2013-08-14 18:12:35 -0400",
    "spec_version": "0.3",
    "source": ["https://github.com/adotout/whitespace-js"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["COPY"],
        "copy": ["COPY_N"],
        "swap": ["SWAP"],
        "drop": ["POP"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MULT"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["LOAD"],
        "label": ["LABEL"],
        "call": ["CALL"],
        "jmp": ["JMP"],
        "jz": ["JEQ"],
        "jn": ["JLT"],
        "ret": ["END_SUB"],
        "end": ["END"],
        "printc": ["OUT"],
        "printi": ["OUT_N"],
        "readc": ["IN"],
        "readi": ["IN_N"]
      },
      "case_sensitive_instructions": false,
      "extension": "bs"
    },
    "commands": [{ "dependencies": ["Grunt"], "build": "npm install && grunt", "run_errors": "Unclear how to run" }]
  },
  {
    "name": "WS2JS",
    "path": "javascript/luilak-ws2js",
    "authors": ["Luilak"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["transpiler"],
    "date": "2013-06-03 16:34:31 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/Luilak/WS2JS"]
  },
  {
    "name": "ws-interpreter",
    "path": "cpp/yuukiaria",
    "authors": ["YuukiARIA"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter", "programs"],
    "date": "2013-05-05 04:06:36 -0700",
    "spec_version": "0.3",
    "source": ["https://github.com/YuukiARIA/ws-interpreter"],
    "bounds": { "precision": "fixed", "heap_min": 0 },
    "commands": [
      {
        "type": "interpreter",
        "bin": "bin/ws",
        "build": "mkdir -p bin && make TARGET=../bin/ws -C src",
        "usage": "$0 [-v <size>] [-c <size>] [-h <size>] <file>",
        "options": [
          {
            "short": "v",
            "arg": "size",
            "type": "C++ int",
            "default": 256,
            "min": 1,
            "desc": "value stack size"
          },
          {
            "short": "c",
            "arg": "size",
            "type": "C++ int",
            "default": 256,
            "min": 1,
            "desc": "call stack size"
          },
          { "short": "h", "arg": "size", "type": "C++ int", "default": 2048, "min": 1, "desc": "heap size" }
        ],
        "option_parse": "manual"
      }
    ]
  },
  {
    "name": "whitespace",
    "path": "java/abhijitsharma",
    "authors": ["Abhijit Sharma"],
    "license": "none",
    "languages": ["Java"],
    "tags": ["interpreter"],
    "date": "2013-04-05 10:21:09 -0700",
    "spec_version": "0.2 incomplete",
    "source": ["https://github.com/abhijitsharma/whitespace"]
  },
  {
    "name": "whitespace",
    "path": "javascript/rumpl",
    "authors": ["Djordje Lukic"],
    "license": "MIT",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2013-03-27 23:32:41 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/rumpl/whitespace"]
  },
  {
    "name": "Whitelips IDE",
    "path": "javascript/vii5ard-whitelips-ide",
    "authors": ["Henri Lakk"],
    "license": "none",
    "languages": ["JavaScript"],
    "tags": ["interpreter", "optimizer", "assembler", "IDE", "programs"],
    "date": "2013-03-20 23:47:24 +0200",
    "spec_version": "0.3",
    "source": [
      "https://github.com/vii5ard/whitespace",
      "https://vii5ard.github.io/whitespace/",
      "https://web.archive.org/web/20141011193149/http://compsoc.dur.ac.uk/archives/whitespace/2013-April/000082.html"
    ],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["drop"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["label"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["end"],
        "printc": ["printc"],
        "printi": ["printi"],
        "readc": ["readc"],
        "readi": ["readi"]
      }
    },
    "notes": "TODO document macros"
  },
  {
    "name": "whitespace-interpreter",
    "path": "cpp/timvandermeij",
    "authors": ["Tim van der Meij", "Willem Obbens", "Simon Klaver"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter", "assembler", "disassembler", "mapping", "programs"],
    "date": "2013-02-06 06:24:15 -0800",
    "spec_version": "0.3",
    "source": [
      "https://github.com/timvandermeij/whitespace-interpreter",
      "https://github.com/wspace-lang/timvandermeij-cpp"
    ],
    "bounds": { "precision": "fixed", "heap_min": 0 },
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["DISCARD"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["MARK"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JUMPZERO"],
        "jn": ["JUMPNEG"],
        "ret": ["ENDSUB"],
        "end": ["ENDPROG"],
        "printc": ["WRITEC"],
        "printi": ["WRITEN"],
        "readc": ["READC"],
        "readi": ["READN"]
      },
      "case_sensitive_instructions": true
    },
    "mappings": [{ "space": "S ", "tab": "T ", "lf": "LF\n", "spaces_between": false }],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "make",
        "usage": "$0",
        "notes": "Filename is hardcoded to ./hello_worldvanwiki.ws"
      }
    ]
  },
  {
    "name": "ws",
    "path": "cpp/knmorgan",
    "authors": ["Kyle Morgan"],
    "license": "GPL-3.0-or-later",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2012-12-29 00:19:16 -0500",
    "spec_version": "0.3",
    "source": ["https://github.com/knmorgan/ws"],
    "bounds": { "precision": "arbitrary" },
    "commands": [
      {
        "type": "interpreter",
        "bin": "ws",
        "dependencies": ["GMP"],
        "build": "make CXXFLAGS='-Wall -pedantic -O3'",
        "usage": "$0 [-v | --version] [-h | --help] [-s <size> | --stack-size <size>] <file>",
        "options": [
          { "short": "v", "long": "version", "desc": "Print version and copyright" },
          { "short": "h", "long": "help", "desc": "Print usage" },
          {
            "short": "s",
            "long": "stack-size",
            "arg": "size",
            "type": "C++ unsigned long",
            "default": 1000000,
            "desc": "Set stack limit"
          }
        ]
      }
    ]
  },
  {
    "name": "Whitespace-Interpreter",
    "path": "cpp/noia",
    "authors": ["Tucker Noia"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter", "programs"],
    "date": "2012-12-15 11:48:38 -0800",
    "spec_version": "0.2 incomplete",
    "source": ["https://github.com/noia1/Whitespace-Interpreter"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "ws",
        "build": "g++ -O3 -Wall -Werror -o ws Lexer.cc Parser.cc",
        "usage": "$0 <file>",
        "notes": "Makefile is broken"
      }
    ],
    "notes": "Only has instructions: push drop add sub mul div mod store retrieve printc printi readc readi"
  },
  {
    "name": "wsInt",
    "path": "cpp/dpohanlon-wsint",
    "authors": ["Daniel O'Hanlon"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter", "disassembler"],
    "date": "2012-12-02 06:45:50 -0800",
    "spec_version": "0.2",
    "source": ["https://github.com/dpohanlon/wsInt", "https://github.com/wspace-lang/dpohanlon-wsint-cpp"],
    "assembly": {
      "instructions": {
        "push": ["Push"],
        "dup": ["Dup"],
        "swap": ["Swap"],
        "drop": ["Discard"],
        "add": ["Plus"],
        "sub": ["Minus"],
        "mul": ["Times"],
        "div": ["Divide"],
        "mod": ["Modulo"],
        "store": ["Store"],
        "retrieve": ["Retrieve"],
        "label": ["Mark"],
        "call": ["Call"],
        "jmp": ["Jump"],
        "jz": ["JumpZ"],
        "jn": ["JumpN"],
        "ret": ["Return"],
        "end": ["End"],
        "printc": ["WriteChar"],
        "printi": ["WriteInt"],
        "readc": ["ReadChar"],
        "readi": ["ReadInt"]
      }
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "bin/wsInt",
        "build": "make",
        "usage": "$0",
        "notes": "Filename is hardcoded to ./count.ws"
      }
    ]
  },
  {
    "name": "WS-idr",
    "path": "idris/edwinb-ws-idr",
    "authors": ["Edwin Brady"],
    "license": "none",
    "languages": ["Idris"],
    "tags": ["interpreter"],
    "date": "2012-11-25 16:53:09 +0000",
    "spec_version": "0.3",
    "source": ["https://github.com/edwinb/WS-idr"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["DISCARD"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETRIEVE"],
        "label": ["LABEL"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["JZ"],
        "jn": ["JNEG"],
        "ret": ["RETURN"],
        "end": ["END"],
        "printc": ["OUTPUT"],
        "printi": ["OUTPUTNUM"],
        "readc": ["READCHAR"],
        "readi": ["READNUM"]
      },
      "usage": ["debug"]
    },
    "commands": [
      {
        "bin": "wspace",
        "dependencies": ["Idris"],
        "build": "idris --build wspace.ipkg",
        "build_errors": "Needs changes for latest Idris",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "Whitespace4j",
    "path": "java/brumbeere-whitespace4j",
    "authors": ["Philipp Speck"],
    "license": "none",
    "languages": ["Java"],
    "tags": ["interpreter"],
    "date": "2012-11-04 21:47:04 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/Brumbeere/Whitespace4j"]
  },
  {
    "name": "whitespace",
    "path": "cpp/abcsharp",
    "authors": ["abcsharp"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2012-10-29 02:26:23 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/abcsharp/Whitespace"],
    "bounds": { "precision": "fixed" },
    "commands": [
      {
        "type": "interpreter",
        "bin": "wsi",
        "build": "g++ -O3 -Wall -std=c++11 -o wsi whitespace/main.cpp",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "whitespace",
    "path": "ruby/bossiernesto",
    "authors": ["Ernesto Bossi"],
    "license": "GPL-3.0-or-later",
    "languages": ["Ruby"],
    "tags": ["interpreter"],
    "date": "2012-10-15 09:37:19 -0300",
    "spec_version": "0.2",
    "source": ["https://github.com/bossiernesto/whitespace"]
  },
  {
    "name": "Whitespace",
    "path": "java/yawkat",
    "authors": ["Jonas Konrad"],
    "license": "none",
    "languages": ["Java"],
    "tags": ["interpreter"],
    "date": "2012-10-06 20:46:37 +0200",
    "spec_version": "0.3",
    "source": ["https://github.com/yawkat/Whitespace"],
    "notes": "Program is hardcoded to the source of fibonacci.ws"
  },
  {
    "name": "SignificantWhitespace",
    "path": "javascript/pvdz-significant-whitespace",
    "authors": ["Peter van der Zee"],
    "license": "none",
    "languages": ["JavaScript"],
    "tags": ["interpreter"],
    "date": "2012-02-16 23:15:56 +0100",
    "spec_version": "0.3",
    "source": ["https://github.com/pvdz/SignificantWhitespace"],
    "notes": "JS1k competition submission"
  },
  {
    "name": "whitespace-0.4",
    "path": "haskell/haroldl-wspace-0.4",
    "authors": ["Harold Lee", "Edwin Brady"],
    "license": "GPL-2.0-or-later",
    "languages": ["Haskell"],
    "tags": ["interpreter"],
    "date": "2011-03-10",
    "spec_version": "0.3",
    "source": [
      "https://github.com/haroldl/whitespace-nd",
      "https://web.archive.org/web/20141011193201/http://compsoc.dur.ac.uk/archives/whitespace/2011-March/000080.html",
      "https://harold.hotelling.net/shuffle.html",
      "https://hackage.haskell.org/package/whitespace-0.4"
    ],
    "whitespace": { "nonstandard": [{ "name": "shuffle", "seq": "STTS" }] },
    "commands": [
      {
        "type": "interpreter",
        "bin": "wspace",
        "build": "make",
        "build_errors": "Needs changes for latest Haskell",
        "usage": "$0 <file>"
      }
    ],
    "notes": "Fork of reference interpreter"
  },
  {
    "name": "white-scheme",
    "path": "scheme/athos-white-scheme",
    "authors": ["Ohta Shogo"],
    "license": "MIT",
    "languages": ["Scheme"],
    "tags": ["interpreter"],
    "date": "2010-12-23 08:35:18 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/athos/white-scheme"],
    "assembly": {
      "instructions": {
        "push": ["PUSH"],
        "dup": ["DUP"],
        "copy": ["COPY"],
        "swap": ["SWAP"],
        "drop": ["POP"],
        "slide": ["SLIDE"],
        "add": ["ADD"],
        "sub": ["SUB"],
        "mul": ["MUL"],
        "div": ["DIV"],
        "mod": ["MOD"],
        "store": ["STORE"],
        "retrieve": ["RETR"],
        "label": ["LABEL"],
        "call": ["CALL"],
        "jmp": ["JUMP"],
        "jz": ["BZERO"],
        "jn": ["BNEG"],
        "ret": ["RET"],
        "end": ["QUIT"],
        "printc": ["PUTC"],
        "printi": ["PUTN"],
        "readc": ["GETC"],
        "readi": ["GETN"]
      },
      "usage": ["enums"]
    }
  },
  {
    "name": "Colorspace",
    "path": "python/dos1-colorspace",
    "authors": ["Sebastian Krzyszkowiak"],
    "license": "GPL-2.0-or-later",
    "languages": ["Python"],
    "tags": ["image steganography"],
    "date": "2010-11-22 15:54:53 +0100",
    "spec_version": "-",
    "source": ["https://github.com/dos1/colorspace"]
  },
  {
    "name": "hws",
    "path": "haskell/takatoh-hws",
    "authors": ["takatoh"],
    "license": "none",
    "languages": ["Haskell"],
    "tags": ["interpreter", "programs"],
    "date": "2010-10-29 10:48:21 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/takatoh/hws"],
    "commands": [
      {
        "type": "interpreter",
        "bin": "hws",
        "build": "make",
        "build_errors": "Needs changes for latest Haskell",
        "usage": "$0 <file>",
        "options": [
          { "short": "i", "long": "instruction", "desc": "show instructions" },
          { "short": "v", "long": "version", "desc": "show version" },
          { "short": ["h", "?"], "long": "help", "desc": "show this message" }
        ],
        "option_parse": "manual"
      }
    ]
  },
  {
    "name": "Esoteric Code Interpreter",
    "path": "csharp/rolisoft-esoteric",
    "authors": ["Roland Bogosi"],
    "license": "GPL-3.0-or-later",
    "languages": ["C#"],
    "tags": ["interpreter", "disassembler"],
    "date": "2010-10-11 09:33:25 +0300",
    "spec_version": "0.2",
    "source": ["https://github.com/RoliSoft/Esoteric-Code-Interpreter"],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "swap": ["swap"],
        "drop": ["pop"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retr"],
        "label": ["label"],
        "call": ["call"],
        "jmp": ["jmp"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["outchar"],
        "printi": ["outnum"],
        "readc": ["readchar"],
        "readi": ["readnum"]
      }
    },
    "commands": [
      {
        "type": "interactive",
        "bin": "bin/Debug/ConsoleApplication1.exe",
        "build": "msbuild /p:Configuration=Debug EsotericCodeInterpreter.csproj",
        "usage": "mono $0",
        "subcommands": [
          { "name": "start", "desc": "interpret program written in CLI" },
          { "name": "load", "desc": "interpret program from a file" },
          { "name": "disasm", "desc": "disassemble into a more understandable assembly-like language" },
          { "name": "help", "desc": "display help" },
          { "name": "clear", "desc": "clear console" },
          { "name": "exit", "desc": "exit CLI" }
        ],
        "notes": "Subcommands are entered interactively"
      }
    ],
    "notes": "Disassembles program trace, including escaped output. Also interprets Brainfuck (and Ook! and Spoon variants), Byter, and Befunge93 programs"
  },
  {
    "name": "whitespace-go",
    "path": "go/technohippy",
    "authors": ["ANDO Yasushi"],
    "license": "none",
    "languages": ["Go"],
    "tags": ["interpreter"],
    "date": "2010-10-08 03:12:01 +0900",
    "spec_version": "0.3",
    "source": ["https://github.com/technohippy/go-whitespace", "https://github.com/wspace-lang/go-whitespace"],
    "bounds": {
      "precision": "Go int",
      "stack_cap": 30000,
      "call_stack_cap": 30000,
      "heap_min": "unbounded",
      "heap_max": "unbounded",
      "heap_cap": "unbounded",
      "label_cap": "unbounded",
      "instruction_cap": 30000
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "go-whitespace",
        "build_errors": "Go version is pre-go1",
        "usage": "$0 [-d] [-h | --help] <file>",
        "options": [
          { "short": "d", "long": "d", "desc": "debug mode" },
          { "short": "h", "long": "h" },
          { "short": "help", "long": "help" }
        ],
        "option_parse": "Go flag"
      }
    ]
  },
  {
    "name": "Whitespace Interpreter and Assembler",
    "path": "python/stephenchappell",
    "authors": ["Stephen Chappell"],
    "license": "MIT",
    "languages": ["Python"],
    "tags": ["interpreter", "assembler", "text to Whitespace", "programs"],
    "date": "2010-03-14 15:35:04 +0000",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/stephenchappell-python",
      "https://code.activestate.com/recipes/sets/12/",
      "https://github.com/ActiveState/code",
      "https://stackoverflow.com/questions/2901274/do-you-have-suggestions-for-these-assembly-mnemonics"
    ],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["copy"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["away"],
        "slide": ["away"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["set"],
        "retrieve": ["get"],
        "label": ["part"],
        "call": ["call"],
        "jmp": ["goto"],
        "jz": ["zero"],
        "jn": ["less"],
        "ret": ["back"],
        "end": ["exit"],
        "printc": ["ochr"],
        "printi": ["oint"],
        "readc": ["ichr"],
        "readi": ["iint"]
      },
      "patterns": { "label": "\"[A-Za-z0-9_]+\"", "number": "[+-]?[0-9]+" },
      "case_sensitive_instructions": true,
      "line_comment_prefix": "#",
      "indentation": "     ",
      "extension": "wsa"
    },
    "commands": [
      {
        "type": "interpreter",
        "bin": "Interpreter.py",
        "build_errors": "msvcrt module only exists on Windows",
        "usage": "python3.1 $0 <basename_no_ext>",
        "input": "Programs/<basename_no_ext>.(ws|wso)",
        "output": "stdout",
        "notes": "A .wso file is generated after parsing the program and subsequent calls use it when the .ws file has not changed"
      },
      {
        "type": "assembler",
        "bin": "Assembler.py",
        "build_errors": "msvcrt module only exists on Windows",
        "usage": "python3.1 $0 <basename_no_ext> [ASM]",
        "input": "Assembly/<basename_no_ext>.wsa",
        "output": "Programs/<basename_no_ext>.ws",
        "options": [{ "bare": "ASM", "desc": "dump program assembly" }],
        "option_parse": "manual"
      },
      {
        "type": "text to Whitespace",
        "bin": "Helpers.py",
        "usage": "python3.1 -c 'from Helpers import encode_string; encode_string(\"<text>\", <address>)'",
        "notes": "Generates a sequence of stores, starting at the given address"
      }
    ],
    "notes": ".wso files are gzip-compressed serializations of the Python structures of parsed programs"
  },
  {
    "name": "Whitespace Interpreter in C++",
    "path": "cpp/peasley",
    "authors": ["Peasley"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2010-02-05 08:24:04 +0000",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/peasley-cpp",
      "http://www.rohitab.com/discuss/topic/35639-c-whitespace-interpreter/?p=10074137"
    ],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "g++ -O3 -Wall -o whitespace whitespace.cpp",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "Whitespace Interpreter v1.0",
    "path": "c/meth0dz",
    "authors": ["MeTh0Dz"],
    "license": "CC-BY-SA-3.0-US",
    "languages": ["C"],
    "tags": ["interpreter"],
    "date": "2010-02-01 01:56:47 +0000",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/meth0dz-c",
      "http://www.rohitab.com/discuss/topic/35639-c-whitespace-interpreter/"
    ],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace",
        "build": "gcc -O3 -Wall -o whitespace whitespace.c",
        "usage": "$0 <file>"
      }
    ]
  },
  {
    "name": "%whitespace.reb",
    "path": "rebol/hostilefork",
    "authors": ["Brian Dickens (Hostile Fork)"],
    "license": "MIT",
    "languages": ["Rebol"],
    "tags": ["interpreter"],
    "date": "2009-10-08",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/hostilefork-rebol",
      "https://github.com/hostilefork/whitespacers/tree/master/rebol"
    ],
    "commands": [
      {
        "type": "interpreter",
        "bin": "whitespace.reb",
        "dependencies": ["Rebol 3"],
        "usage": "r3 $0",
        "notes": "Program is hardcoded to one that counts from 1 to 10. Prints instructions while executing."
      }
    ]
  },
  {
    "name": "HaPyLi",
    "authors": ["Huf Lungdung (Cybis)"],
    "license": "unknown",
    "languages": ["Python"],
    "tags": ["language", "interpreter", "standard library", "programs"],
    "date": "2009-03-03 19:44:31 +0000",
    "spec_version": "0.3",
    "source": [
      "https://web.archive.org/web/20110212015726/http://hapyli.webs.com/",
      "https://web.archive.org/web/20141011193154/http://compsoc.dur.ac.uk/archives/whitespace/2010-May/000075.html",
      "https://github.com/helvm/hapyli",
      "https://stackoverflow.com/questions/607830/use-of-haskell-state-monad-a-code-smell"
    ],
    "notes": "A Sudoku solver was written in HaPyLi"
  },
  {
    "name": "Spacesharp",
    "description": "Compiles to MSIL executable using the .NET System.Reflection.Emit API",
    "path": "csharp/nicolasff-spacesharp",
    "authors": ["Nicolas Favre-Felix"],
    "license": "GPL-2.0-or-later",
    "languages": ["C#", "C", "Yacc", "Lex"],
    "tags": ["compiler", "programs"],
    "date": "2008-08-25 08:55:11 +0000",
    "spec_version": "0.3",
    "source": ["https://github.com/nicolasff/spacesharp"],
    "assembly": {
      "instructions": {
        "push": ["Push"],
        "dup": ["Duplicate"],
        "copy": ["Copy"],
        "swap": ["Swap"],
        "drop": ["Discard"],
        "slide": ["Slide"],
        "add": ["Addition"],
        "sub": ["Substraction"],
        "mul": ["Multiplication"],
        "div": ["Division"],
        "mod": ["Modulo"],
        "store": ["Store"],
        "retrieve": ["Retrieve"],
        "label": ["Mark"],
        "call": ["CallSub"],
        "jmp": ["Jmp"],
        "jz": ["JZ"],
        "jn": ["JLZ"],
        "ret": ["EndSub"],
        "end": ["EndProg"],
        "printc": ["PrintChar"],
        "printi": ["PrintNumber"],
        "readc": ["ReadChar"],
        "readi": ["ReadNumber"]
      }
    },
    "commands": [
      {
        "bin": "wsc.exe",
        "build": "make",
        "usage": "mono $0 [-o <output_file>] <file>",
        "output": "<output_file> or ` .exe` if empty",
        "options": [{ "short": "o", "desc": "output file" }],
        "option_parse": "manual",
        "notes": "Run output file with `mono <output_file>`"
      }
    ],
    "notes": "Assembly mnemonics only used internally for enums"
  },
  {
    "name": "wspace",
    "authors": ["hogelog"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2008-05-02",
    "spec_version": "0.3",
    "source": ["https://github.com/hogelog/hogel.org-old/tree/master/content/lib/c/ws"]
  },
  {
    "name": "wspace",
    "path": "cpp/pavelshub",
    "authors": ["Pavel Shub"],
    "license": "GPL-2.0-or-later",
    "languages": ["C++"],
    "tags": ["interpreter", "debugger", "disassembler", "mapping"],
    "date": "2007-05-26 17:19:24",
    "spec_version": "0.3",
    "source": [
      "https://github.com/pavel987/wspace",
      "https://web.archive.org/web/20141011193149/http://compsoc.dur.ac.uk/archives/whitespace/2008-April/000068.html",
      "http://pavelshub.com/blog/2010/10/wspace/",
      "https://github.com/wspace-lang/pavelshub-cpp"
    ],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "copy": ["copy"],
        "swap": ["swap"],
        "drop": ["discard"],
        "slide": ["slide"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["label"],
        "call": ["call"],
        "jmp": ["jump"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["outchar"],
        "printi": ["outnum"],
        "readc": ["readchar"],
        "readi": ["readnum"]
      }
    },
    "mappings": [{ "space": "A", "tab": "B", "lf": "C\n", "spaces_between": false }],
    "commands": [
      {
        "type": "interpreter",
        "bin": "wspace",
        "build": "g++ -O3 -Wall -o wspace wspace.cpp",
        "usage": "$0 [algdh] <file>",
        "options": [
          { "short": "a", "desc": "print whitespace assembly language instead of program execution" },
          {
            "short": "l",
            "desc": "prints the code using ABC instead of space, tab, and new line respectively then exits"
          },
          { "short": "g", "desc": "debugging mode, will step through each command of the program manually" },
          {
            "short": "d",
            "desc": "prints stack and heap size after program execution similar to original ws interpreter"
          },
          { "short": "h", "long": "help", "desc": "print this menu then exit" }
        ],
        "option_parse": "manual",
        "notes": "Flags combine similar to `tar`, without dash required"
      }
    ]
  },
  {
    "name": "pywhitespace",
    "path": "python/phlip-pywhitespace",
    "authors": ["Phillip Bradbury"],
    "license": "GPL-2.0-or-later",
    "languages": ["Python"],
    "tags": ["interpreter"],
    "date": "2004-08-03 07:32:50 +0000",
    "spec_version": "0.3",
    "source": [
      "https://github.com/wspace-lang/phlip-pywhitespace",
      "https://web.archive.org/web/20141011193201/http://compsoc.dur.ac.uk/archives/whitespace/2004-August/000048.html",
      "https://web.archive.org/web/20161111081914/http://compsoc.dur.ac.uk/archives/whitespace/2007-December/000065.html",
      "https://web.archive.org/web/20061209092911/http://www.cs.newcastle.edu.au/~c3018900/pywhitespace.tar.bz2",
      "https://www.mrphlip.com/pywhitespace.tar.bz2"
    ],
    "whitespace": { "nonstandard": [{ "name": "trace", "seq": "LLT" }] }
  },
  {
    "name": "wspace 0.3",
    "authors": ["Edwin Brady"],
    "license": "GPL-2.0-or-later",
    "languages": ["Haskell", "Emacs Lisp"],
    "tags": ["interpreter", "syntax highlighting", "programs"],
    "date": "2004-05-04",
    "spec_version": "0.3",
    "source": [
      "https://web.archive.org/web/20150717140342/http://compsoc.dur.ac.uk:80/whitespace/download.php",
      "https://web.archive.org/web/20141011193201/http://compsoc.dur.ac.uk/archives/whitespace/2004-May/000047.html"
    ],
    "bounds": { "precision": "arbitrary" }
  },
  {
    "name": "wsinterws",
    "authors": ["Oliver Burghard"],
    "license": "none",
    "languages": ["Whitespace"],
    "tags": ["interpreter"],
    "date": "2003-04-24",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20030608024503/http://www.burghard.info/code/whitespace/wsinterws/index.html",
      "https://web.archive.org/web/20150803032955/http://www.burghard.info/Code/Whitespace/wsinterws.zip",
      "https://web.archive.org/web/20110911114338/http://www.burghard.info/Code/Whitespace/"
    ]
  },
  {
    "name": "whitespace-ruby",
    "authors": ["Wayne E. Conrad"],
    "license": "GPL-2.0-or-later",
    "languages": ["Ruby"],
    "tags": ["interpreter"],
    "date": "2003-04-02",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20120417161536/http://yagni.com:80/whitespace/whitespace",
      "https://web.archive.org/web/20120417161917/http://yagni.com/whitespace/index.html"
    ]
  },
  {
    "name": "whitespace.pl",
    "authors": ["Mike Kölbl"],
    "license": "GPL-2.0-or-later",
    "languages": ["Perl"],
    "tags": ["interpreter"],
    "date": "2003-04-01",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20150425000432/http://compsoc.dur.ac.uk/whitespace/whitespace.pl",
      "https://web.archive.org/web/20150717140342/http://compsoc.dur.ac.uk:80/whitespace/download.php"
    ]
  },
  {
    "name": "whitespace-asm",
    "authors": ["Wayne E. Conrad"],
    "license": "GPL-2.0-or-later",
    "languages": ["Ruby"],
    "tags": ["assembler"],
    "date": "2003",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20110916050014/http://yagni.com/whitespace/whitespace-asm",
      "https://web.archive.org/web/20120417161917/http://yagni.com/whitespace/index.html"
    ],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "swap": ["swap"],
        "drop": ["discard"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["label"],
        "call": ["call"],
        "jmp": ["jump"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["outchar"],
        "printi": ["outnum"],
        "readc": ["readchar"],
        "readi": ["readnum"]
      },
      "extension": "wsa"
    }
  },
  {
    "name": "whitespace-disassem",
    "authors": ["Wayne E. Conrad"],
    "license": "GPL-2.0-or-later",
    "languages": ["Ruby"],
    "tags": ["disassembler"],
    "date": "2003",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20110916112141/http://yagni.com/whitespace/whitespace-disassem",
      "https://web.archive.org/web/20120417161917/http://yagni.com/whitespace/index.html"
    ],
    "assembly": {
      "instructions": {
        "push": ["push"],
        "dup": ["dup"],
        "swap": ["swap"],
        "drop": ["discard"],
        "add": ["add"],
        "sub": ["sub"],
        "mul": ["mul"],
        "div": ["div"],
        "mod": ["mod"],
        "store": ["store"],
        "retrieve": ["retrieve"],
        "label": ["label"],
        "call": ["call"],
        "jmp": ["jump"],
        "jz": ["jz"],
        "jn": ["jn"],
        "ret": ["ret"],
        "end": ["exit"],
        "printc": ["outchar"],
        "printi": ["outnum"],
        "readc": ["readchar"],
        "readi": ["readnum"]
      }
    }
  },
  {
    "name": "wsa",
    "authors": ["Oliver Burghard"],
    "license": "none",
    "languages": ["Haskell"],
    "tags": ["assembler"],
    "date": "2003",
    "spec_version": "0.3",
    "source": [
      "https://web.archive.org/web/20030629154300/http://www.burghard.info/code/whitespace/wsa/index.html",
      "https://web.archive.org/web/20110911114338/http://www.burghard.info/Code/Whitespace/wsa.zip",
      "https://web.archive.org/web/20110911114338/http://www.burghard.info/Code/Whitespace/"
    ],
    "notes": "Supports non-standard instructions"
  },
  {
    "name": "wsintercpp",
    "authors": ["Oliver Burghard"],
    "license": "none",
    "languages": ["C++"],
    "tags": ["interpreter"],
    "date": "2003",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20030629125208/http://www.burghard.info/code/whitespace/wsintercpp/index.html",
      "https://web.archive.org/web/20140609162801/http://www.burghard.info/Code/Whitespace/wsintercpp.zip",
      "https://web.archive.org/web/20110911114338/http://www.burghard.info/Code/Whitespace/"
    ],
    "notes": "Supports non-standard instructions"
  },
  {
    "name": "wspace 0.2",
    "authors": ["Edwin Brady"],
    "license": "GPL-2.0-or-later",
    "languages": ["Haskell"],
    "tags": ["interpreter", "programs"],
    "date": "2002",
    "spec_version": "0.2",
    "source": [
      "https://web.archive.org/web/20150717140342/http://compsoc.dur.ac.uk:80/whitespace/download.php",
      "https://slashdot.org/story/03/04/01/0332202/new-whitespace-only-programming-language"
    ],
    "bounds": { "precision": "arbitrary" }
  }
]
